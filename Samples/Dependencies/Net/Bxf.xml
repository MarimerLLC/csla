<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bxf</name>
    </assembly>
    <members>
        <member name="T:Bxf.Converters.NotConverter">
            <summary>
            Inverts a bool value, returning true for false 
            and false for true.
            </summary>
        </member>
        <member name="M:Bxf.Converters.NotConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a bool value to its opposite.
            </summary>
            <param name="value">Value to convert.</param>
            <param name="targetType">Target type (ignored).</param>
            <param name="parameter">Parameter value (ignored).</param>
            <param name="culture">Culture (ignored).</param>
        </member>
        <member name="M:Bxf.Converters.NotConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a bool value to its opposite.
            </summary>
            <param name="value">Value to convert.</param>
            <param name="targetType">Target type (ignored).</param>
            <param name="parameter">Parameter value (ignored).</param>
            <param name="culture">Culture (ignored).</param>
        </member>
        <member name="T:Bxf.Converters.VisibilityConverter">
            <summary>
            Converts a bool to a Visibility value. By default
            true means Visible, false means Collapsed.
            </summary>
        </member>
        <member name="M:Bxf.Converters.VisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a bool to a Visibility value.
            </summary>
            <param name="value">Value to convert.</param>
            <param name="targetType">Target type (ignored).</param>
            <param name="parameter">Parameter value (ignored).</param>
            <param name="culture">Culture (ignored).</param>
        </member>
        <member name="M:Bxf.Converters.VisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns null.
            </summary>
            <param name="value">Value to convert.</param>
            <param name="targetType">Target type (ignored).</param>
            <param name="parameter">Parameter value (ignored).</param>
            <param name="culture">Culture (ignored).</param>
        </member>
        <member name="P:Bxf.Converters.VisibilityConverter.Invert">
            <summary>
            Inverts the normal bool to Visibility conversion.
            </summary>
        </member>
        <member name="T:Bxf.IPresenter">
            <summary>
            Shell implementation must implement this
            interface to be invoked by the shell
            manager.
            </summary>
        </member>
        <member name="E:Bxf.IPresenter.OnShowView">
            <summary>
            Event raised when a view is to be displayed.
            </summary>
        </member>
        <member name="E:Bxf.IPresenter.OnShowError">
            <summary>
            Event raised when an error is to be displayed.
            </summary>
        </member>
        <member name="E:Bxf.IPresenter.OnShowStatus">
            <summary>
            Event raised when a new status is to be displayed.
            </summary>
        </member>
        <member name="E:Bxf.IPresenter.OnNewUser">
            <summary>
            Event raised when a new IPrincipal object
            has been set.
            </summary>
        </member>
        <member name="T:Bxf.IShell">
            <summary>
            Defines the members of a shell manager
            object for use with the Bxf framework.
            </summary>
        </member>
        <member name="M:Bxf.IShell.ShowView(Bxf.IView,System.String)">
            <summary>
            Initializes the binding resource and raises
            displays the view.
            </summary>
            <param name="view">View to show.</param>
            <param name="region">UI region where view should be displayed.</param>
        </member>
        <member name="M:Bxf.IShell.ShowView(System.String,System.String,System.Object,System.String)">
            <summary>
            Initializes the binding resource and raises
            displays the view.
            </summary>
            <param name="viewName">Name of the view.</param>
            <param name="bindingResourceKey">Name of the binding resource
            key to which the model should be connected.</param>
            <param name="model">Model or viewmodel to connect to the
            binding resource.</param>
            <param name="region">UI region where view should be displayed.</param>
        </member>
        <member name="M:Bxf.IShell.ShowError(System.String,System.String)">
            <summary>
            Displays the error message.
            </summary>
            <param name="message">Error message.</param>
            <param name="title">Error title.</param>
        </member>
        <member name="M:Bxf.IShell.ShowStatus(Bxf.Status)">
            <summary>
            Displays the status information.
            </summary>
            <param name="status">Status information.</param>
        </member>
        <member name="M:Bxf.IShell.NewUser">
            <summary>
            Indicates that a new IPrincipal object
            has been set.
            </summary>
        </member>
        <member name="P:Bxf.IShell.ViewFactory">
            <summary>
            Gets or sets a reference to the view factory
            object for this presenter.
            </summary>
        </member>
        <member name="T:Bxf.IView">
            <summary>
            Defines the members of a
            view.
            </summary>
        </member>
        <member name="P:Bxf.IView.ViewInstance">
            <summary>
            Gets the instance of the view.
            </summary>
        </member>
        <member name="P:Bxf.IView.ViewName">
            <summary>
            Gets the name of the view used to create
            the view instance by the view factory.
            </summary>
        </member>
        <member name="P:Bxf.IView.BindingResourceKey">
            <summary>
            Gets the name of the binding resource to which
            the model should be connected.
            </summary>
        </member>
        <member name="P:Bxf.IView.Model">
            <summary>
            Gets the model to bind to the view.
            </summary>
        </member>
        <member name="T:Bxf.IViewFactory">
            <summary>
            Defines the members for a view
            factory object.
            </summary>
        </member>
        <member name="M:Bxf.IViewFactory.GetView(System.String,System.String,System.Object)">
            <summary>
            Creates a populated IView object, including
            the instance of the view.
            </summary>
            <param name="viewName">Name of the view.</param>
            <param name="bindingResourceKey">Name of the binding resource.</param>
            <param name="model">Reference to the model or viewmodel for the view.</param>
        </member>
        <member name="T:Bxf.ModelManager">
            <summary>
            Manages a model or viewmodel object, wrapping it
            for access through a XAML resource dictionary.
            </summary>
        </member>
        <member name="F:Bxf.ModelManager.DataProperty">
            <summary>
            Gets or sets the model or viewmodel value.
            </summary>
        </member>
        <member name="P:Bxf.ModelManager.Data">
            <summary>
            Gets or sets the model or viewmodel value.
            </summary>
        </member>
        <member name="T:Bxf.Shell">
            <summary>
            Default presenter used to display view, error
            and status information.
            </summary>
        </member>
        <member name="M:Bxf.Shell.ShowView(System.String,System.String,System.Object,System.String)">
            <summary>
            Initializes the binding resource and raises
            displays the view.
            </summary>
            <param name="viewName">Name of the view.</param>
            <param name="bindingResourceKey">Name of the binding resource
            key to which the model should be connected.</param>
            <param name="model">Model or viewmodel to connect to the
            binding resource.</param>
            <param name="region">UI region where view should be displayed.</param>
        </member>
        <member name="M:Bxf.Shell.ShowView(Bxf.IView,System.String)">
            <summary>
            Initializes the binding resource and raises
            displays the view.
            </summary>
            <param name="view">View to show.</param>
            <param name="region">UI region where view should be displayed.</param>
        </member>
        <member name="M:Bxf.Shell.InitializeBindingResource(Bxf.IView)">
            <summary>
            Connects the model to the binding resource
            in the view.
            </summary>
            <param name="view">IView object containing information
            about the view, binding resource and model.</param>
            <returns>Updated view instance.</returns>
            <remarks>
            The binding resource must be a CollectionViewSource or a
            Bxf.ModelManager to set the model into the resource.
            If the binding resource name is null or string.Empty then
            the DataContext of the view is directly set to the model.
            </remarks>
        </member>
        <member name="M:Bxf.Shell.ShowError(System.String,System.String)">
            <summary>
            Displays the error message.
            </summary>
            <param name="message">Error message.</param>
            <param name="title">Error title.</param>
        </member>
        <member name="M:Bxf.Shell.ShowStatus(Bxf.Status)">
            <summary>
            Displays the status text.
            </summary>
            <param name="status">Status text.</param>
        </member>
        <member name="M:Bxf.Shell.NewUser">
            <summary>
            Indicates that a new IPrincipal object
            has been set.
            </summary>
        </member>
        <member name="P:Bxf.Shell.Instance">
            <summary>
            Gets or sets the current instance of 
            presenter object.
            </summary>
        </member>
        <member name="P:Bxf.Shell.ViewFactory">
            <summary>
            Gets or sets a reference to the view factory
            object for this presenter.
            </summary>
        </member>
        <member name="E:Bxf.Shell.OnShowView">
            <summary>
            Event raised when a view is to be displayed.
            </summary>
        </member>
        <member name="E:Bxf.Shell.OnShowError">
            <summary>
            Event raised when an error is to be displayed.
            </summary>
        </member>
        <member name="E:Bxf.Shell.OnShowStatus">
            <summary>
            Event raised when a new status is to be displayed.
            </summary>
        </member>
        <member name="E:Bxf.Shell.OnNewUser">
            <summary>
            Event raised when a new IPrincipal object
            has been set.
            </summary>
        </member>
        <member name="T:Bxf.Status">
            <summary>
            Defines members to describe status information
            </summary>
        </member>
        <member name="M:Bxf.Status.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bxf.Status"/> class.
            </summary>
        </member>
        <member name="P:Bxf.Status.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Bxf.Status.IsBusy">
            <summary>
            Gets or sets a value indicating whether this instance is busy.
            </summary>
            <value><c>true</c> if this instance is busy; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bxf.Status.IsOk">
            <summary>
            Gets or sets a value indicating whether this instance is ok.
            </summary>
            <remarks>
            Intended to indicate whether the operation (to which this instance of
            status information relates) was successful or not.
            </remarks>
            <value><c>true</c> if this instance is ok; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bxf.Status.Visual">
            <summary>
            Gets or sets the associated visual element for this instance.
            </summary>
            <remarks>
            This is optional.
            </remarks>
            <value>The visual element.</value>
        </member>
        <member name="T:Bxf.View">
            <summary>
            Contains the information about a view
            necessary for Bxf to initialize and display
            the view.
            </summary>
        </member>
        <member name="M:Bxf.View.#ctor(System.String,System.Windows.Controls.UserControl,System.String,System.Object)">
            <summary>
            Creates an instance of the object.
            </summary>
            <param name="viewName">Name of the view.</param>
            <param name="view">Instance of the view.</param>
            <param name="bindingResourceKey">Name of the binding resource.</param>
            <param name="model">Instance of the model or viewmodel for the view.</param>
        </member>
        <member name="P:Bxf.View.ViewInstance">
            <summary>
            Gets the instance of the view.
            </summary>
        </member>
        <member name="P:Bxf.View.ViewName">
            <summary>
            Gets the name of the view used to create
            the view instance by the view factory.
            </summary>
        </member>
        <member name="P:Bxf.View.BindingResourceKey">
            <summary>
            Gets the name of the binding resource to which
            the model should be connected.
            </summary>
        </member>
        <member name="P:Bxf.View.Model">
            <summary>
            Gets the instance of the model 
            or viewmodel for the view.
            </summary>
        </member>
        <member name="T:Bxf.ViewFactory">
            <summary>
            Responsible for creating a fully populated IView
            object.
            </summary>
        </member>
        <member name="M:Bxf.ViewFactory.GetView(System.String,System.String,System.Object)">
            <summary>
            Creates a populated IView object, including
            the instance of the view.
            </summary>
            <param name="viewName">Name of the view.</param>
            <param name="bindingResourceKey">Name of the binding resource.</param>
            <param name="model">Reference to the model or viewmodel for the view.</param>
        </member>
        <member name="M:Bxf.ViewFactory.CreateUserControl(System.String)">
            <summary>
            Creates an instance of the view.
            </summary>
            <param name="viewName">Name of the view.</param>
        </member>
        <member name="T:Bxf.Xaml.ExecuteEventArgs">
            <summary>
            Arguments passed to a method invoked
            by the Execute trigger action.
            </summary>
        </member>
        <member name="P:Bxf.Xaml.ExecuteEventArgs.TriggerSource">
            <summary>
            The control that raised the event that
            triggered invocation of this method.
            </summary>
        </member>
        <member name="P:Bxf.Xaml.ExecuteEventArgs.MethodParameter">
            <summary>
            The MethodParameter value provided by
            the designer.
            </summary>
        </member>
        <member name="P:Bxf.Xaml.ExecuteEventArgs.TriggerParameter">
            <summary>
            The EventArgs parameter from the event
            that triggered invocation of this method.
            </summary>
        </member>
        <member name="T:Bxf.Xaml.TriggerAction">
            <summary>
            Control used to invoke a method on the DataContext
            based on an event being raised by a UI control.
            </summary>
        </member>
        <member name="M:Bxf.Xaml.TriggerAction.#ctor">
            <summary>
            Creates an instance of the object.
            </summary>
        </member>
        <member name="M:Bxf.Xaml.TriggerAction.CallMethod(System.Object,System.EventArgs)">
            <summary>
            Invokes target method.
            </summary>
        </member>
        <member name="F:Bxf.Xaml.TriggerAction.TargetControlProperty">
            <summary>
            Gets or sets the target UI control.
            </summary>
        </member>
        <member name="F:Bxf.Xaml.TriggerAction.TriggerEventProperty">
            <summary>
            Gets or sets the name of the event
            that will trigger the action.
            </summary>
        </member>
        <member name="F:Bxf.Xaml.TriggerAction.MethodNameProperty">
            <summary>
            Gets or sets the name of the method
            to be invoked.
            </summary>
        </member>
        <member name="F:Bxf.Xaml.TriggerAction.MethodParameterProperty">
            <summary>
            Gets or sets the value of a parameter to
            be passed to the invoked method.
            </summary>
        </member>
        <member name="F:Bxf.Xaml.TriggerAction.RebindParameterDynamicallyProperty">
            <summary>
            Gets or sets a value indicating whether the
            MethodParameter value should be dynamically rebound
            before invoking the target method.
            </summary>
        </member>
        <member name="P:Bxf.Xaml.TriggerAction.TargetControl">
            <summary>
            Gets or sets the target UI control.
            </summary>
        </member>
        <member name="P:Bxf.Xaml.TriggerAction.TriggerEvent">
            <summary>
            Gets or sets the name of the event
            that will trigger the action.
            </summary>
        </member>
        <member name="P:Bxf.Xaml.TriggerAction.MethodName">
            <summary>
            Gets or sets the name of the method
            to be invoked.
            </summary>
        </member>
        <member name="P:Bxf.Xaml.TriggerAction.MethodParameter">
            <summary>
            Gets or sets the value of a parameter to
            be passed to the invoked method.
            </summary>
        </member>
        <member name="P:Bxf.Xaml.TriggerAction.RebindParameterDynamically">
            <summary>
            Gets or sets a value indicating whether the
            MethodParameter value should be dynamically rebound
            before invoking the target method.
            </summary>
        </member>
    </members>
</doc>
