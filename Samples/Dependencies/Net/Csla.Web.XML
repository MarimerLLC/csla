<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Csla.Web</name>
    </assembly>
    <members>
        <member name="T:Csla.Web.ApplicationContextManager">
            <summary>
            Application context manager that uses HttpContext
            to store context values.
            </summary>
        </member>
        <member name="M:Csla.Web.ApplicationContextManager.GetUser">
            <summary>
            Gets the current principal.
            </summary>
        </member>
        <member name="M:Csla.Web.ApplicationContextManager.SetUser(System.Security.Principal.IPrincipal)">
            <summary>
            Sets the current principal.
            </summary>
            <param name="principal">Principal object.</param>
        </member>
        <member name="M:Csla.Web.ApplicationContextManager.GetLocalContext">
            <summary>
            Gets the local context.
            </summary>
        </member>
        <member name="M:Csla.Web.ApplicationContextManager.SetLocalContext(Csla.Core.ContextDictionary)">
            <summary>
            Sets the local context.
            </summary>
            <param name="localContext">Local context.</param>
        </member>
        <member name="M:Csla.Web.ApplicationContextManager.GetClientContext">
            <summary>
            Gets the client context.
            </summary>
        </member>
        <member name="M:Csla.Web.ApplicationContextManager.SetClientContext(Csla.Core.ContextDictionary)">
            <summary>
            Sets the client context.
            </summary>
            <param name="clientContext">Client context.</param>
        </member>
        <member name="M:Csla.Web.ApplicationContextManager.GetGlobalContext">
            <summary>
            Gets the global context.
            </summary>
        </member>
        <member name="M:Csla.Web.ApplicationContextManager.SetGlobalContext(Csla.Core.ContextDictionary)">
            <summary>
            Sets the global context.
            </summary>
            <param name="globalContext">Global context.</param>
        </member>
        <member name="P:Csla.Web.ApplicationContextManager.IsValid">
            <summary>
            Gets a value indicating whether this
            context manager is valid for use in
            the current environment.
            </summary>
        </member>
        <member name="T:Csla.Web.CslaDataSource">
            <summary>
            A Web Forms data binding control designed to support
            CSLA .NET business objects as data sources.
            </summary>
        </member>
        <member name="M:Csla.Web.CslaDataSource.GetView(System.String)">
            <summary>
            Returns the default view for this data control.
            </summary>
            <param name="viewName">Ignored.</param>
            <returns></returns>
            <remarks>This control only contains a "Default" view.</remarks>
        </member>
        <member name="M:Csla.Web.CslaDataSource.GetType(System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.Type">Type</see> object based on the
            assembly and type information provided.
            </summary>
            <param name="typeAssemblyName">Optional assembly name.</param>
            <param name="typeName">Full type name of the class,
            including assembly name.</param>
            <remarks></remarks>
        </member>
        <member name="M:Csla.Web.CslaDataSource.GetViewNames">
            <summary>
            Returns a list of views available for this control.
            </summary>
            <remarks>This control only provides the "Default" view.</remarks>
        </member>
        <member name="M:Csla.Web.CslaDataSource.OnSelectObject(Csla.Web.SelectObjectArgs)">
            <summary>
            Raises the SelectObject event.
            </summary>
        </member>
        <member name="M:Csla.Web.CslaDataSource.OnInsertObject(Csla.Web.InsertObjectArgs)">
            <summary>
            Raises the InsertObject event.
            </summary>
        </member>
        <member name="M:Csla.Web.CslaDataSource.OnUpdateObject(Csla.Web.UpdateObjectArgs)">
            <summary>
            Raises the UpdateObject event.
            </summary>
        </member>
        <member name="M:Csla.Web.CslaDataSource.OnDeleteObject(Csla.Web.DeleteObjectArgs)">
            <summary>
            Raises the DeleteObject event.
            </summary>
        </member>
        <member name="E:Csla.Web.CslaDataSource.SelectObject">
            <summary>
            Event raised when an object is to be created and
            populated with data.
            </summary>
            <remarks>Handle this event in a page and set
            e.BusinessObject to the populated business object.
            </remarks>
        </member>
        <member name="E:Csla.Web.CslaDataSource.InsertObject">
            <summary>
            Event raised when an object is to be populated with data
            and inserted.
            </summary>
            <remarks>Handle this event in a page to create an
            instance of the object, load the object with data and
            insert the object into the database.</remarks>
        </member>
        <member name="E:Csla.Web.CslaDataSource.UpdateObject">
            <summary>
            Event raised when an object is to be updated.
            </summary>
            <remarks>Handle this event in a page to update an
            existing instance of an object with new data and then
            save the object into the database.</remarks>
        </member>
        <member name="E:Csla.Web.CslaDataSource.DeleteObject">
            <summary>
            Event raised when an object is to be deleted.
            </summary>
            <remarks>Handle this event in a page to delete
            an object from the database.</remarks>
        </member>
        <member name="P:Csla.Web.CslaDataSource.TypeAssemblyName">
            <summary>
            Get or set the name of the assembly (no longer used).
            </summary>
            <value>Obsolete - do not use.</value>
        </member>
        <member name="P:Csla.Web.CslaDataSource.TypeName">
            <summary>
            Get or set the full type name of the business object
            class to be used as a data source.
            </summary>
            <value>Full type name of the business class,
            including assembly name.</value>
        </member>
        <member name="P:Csla.Web.CslaDataSource.TypeSupportsPaging">
            <summary>
            Get or set a value indicating whether the
            business object data source supports paging.
            </summary>
            <remarks>
            To support paging, the business object
            (collection) must implement 
            <see cref="T:Csla.Core.IReportTotalRowCount"/>.
            </remarks>
        </member>
        <member name="P:Csla.Web.CslaDataSource.TypeSupportsSorting">
            <summary>
            Get or set a value indicating whether the
            business object data source supports sorting.
            </summary>
        </member>
        <member name="T:Csla.Web.CslaDataSourceView">
            <summary>
            The object responsible for managing data binding
            to a specific CSLA .NET object.
            </summary>
        </member>
        <member name="M:Csla.Web.CslaDataSourceView.#ctor(Csla.Web.CslaDataSource,System.String)">
            <summary>
            Creates an instance of the object.
            </summary>
            <param name="owner">The CslaDataSource object
            that owns this view.</param>
            <param name="viewName">The name of the view.</param>
        </member>
        <member name="M:Csla.Web.CslaDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
            <summary>
            Implements the select behavior for
            the control by raising the 
            <see cref="E:Csla.Web.CslaDataSource.SelectObject"/> event.
            </summary>
            <param name="arguments">Arguments object.</param>
            <returns>The data returned from the select.</returns>
        </member>
        <member name="M:Csla.Web.CslaDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
            <summary>
            Implements the insert behavior for
            the control by raising the 
            <see cref="E:Csla.Web.CslaDataSource.InsertObject"/> event.
            </summary>
            <param name="values">The values from
            the UI that are to be inserted.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Csla.Web.CslaDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Implements the delete behavior for
            the control by raising the 
            <see cref="E:Csla.Web.CslaDataSource.DeleteObject"/> event.
            </summary>
            <param name="keys">The key values from
            the UI that are to be deleted.</param>
            <param name="oldValues">The old values
            from the UI.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Csla.Web.CslaDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Implements the update behavior for
            the control by raising the 
            <see cref="E:Csla.Web.CslaDataSource.UpdateObject"/> event.
            </summary>
            <param name="keys">The key values from the UI
            that identify the object to be updated.</param>
            <param name="values">The values from
            the UI that are to be inserted.</param>
            <param name="oldValues">The old values
            from the UI.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="P:Csla.Web.CslaDataSourceView.TypeAssemblyName">
            <summary>
            Get or set the name of the assembly (no longer used).
            </summary>
            <value>Obsolete - do not use.</value>
        </member>
        <member name="P:Csla.Web.CslaDataSourceView.TypeName">
            <summary>
            Get or set the full type name of the business object
            class to be used as a data source.
            </summary>
            <value>Full type name of the business class.</value>
        </member>
        <member name="P:Csla.Web.CslaDataSourceView.TypeSupportsPaging">
            <summary>
            Get or set a value indicating whether the
            business object data source supports paging.
            </summary>
            <remarks>
            To support paging, the business object
            (collection) must implement 
            <see cref="T:Csla.Core.IReportTotalRowCount"/>.
            </remarks>
        </member>
        <member name="P:Csla.Web.CslaDataSourceView.TypeSupportsSorting">
            <summary>
            Get or set a value indicating whether the
            business object data source supports sorting.
            </summary>
        </member>
        <member name="P:Csla.Web.CslaDataSourceView.CanInsert">
            <summary>
            Gets a value indicating whether the data source can
            insert data.
            </summary>
        </member>
        <member name="P:Csla.Web.CslaDataSourceView.CanDelete">
            <summary>
            Gets a value indicating whether the data source can
            delete data.
            </summary>
        </member>
        <member name="P:Csla.Web.CslaDataSourceView.CanUpdate">
            <summary>
            Gets a value indicating whether the data source can
            update data.
            </summary>
        </member>
        <member name="P:Csla.Web.CslaDataSourceView.CanPage">
            <summary>
            Gets a value indicating whether the data source supports
            paging of the data.
            </summary>
        </member>
        <member name="P:Csla.Web.CslaDataSourceView.CanRetrieveTotalRowCount">
            <summary>
            Gets a value indicating whether the data source can
            retrieve the total number of rows of data. Always
            returns <see langword="true"/>.
            </summary>
        </member>
        <member name="P:Csla.Web.CslaDataSourceView.CanSort">
            <summary>
            Gets a alue indicating whether the data source supports
            sorting of the data. Always returns <see langword="false"/>.
            </summary>
        </member>
        <member name="T:Csla.Web.DeleteObjectArgs">
            <summary>
            Argument object used in the DeleteObject event.
            </summary>
        </member>
        <member name="M:Csla.Web.DeleteObjectArgs.#ctor(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Create an instance of the object.
            </summary>
        </member>
        <member name="P:Csla.Web.DeleteObjectArgs.RowsAffected">
            <summary>
            Gets or sets the number of rows affected
            while handling this event.
            </summary>
            <value></value>
            <returns></returns>
            <remarks>
            The code handling the event should set this
            value to indicate the number of rows affected
            by the operation.
            </remarks>
        </member>
        <member name="P:Csla.Web.DeleteObjectArgs.Keys">
            <summary>
            The list of key values entered by the user.
            </summary>
            <remarks>It is up to the event handler in the
            web page to use the values to identify the 
            object to be deleted.</remarks>
        </member>
        <member name="P:Csla.Web.DeleteObjectArgs.OldValues">
            <summary>
            The list of old data values maintained by
            data binding.
            </summary>
            <remarks>It is up to the event handler in the
            web page to use the values to identify the 
            object to be deleted.</remarks>
        </member>
        <member name="T:Csla.Web.Design.CslaDataSourceConfiguration">
            <summary>
            CslaDataSource configuration form.
            </summary>
        </member>
        <member name="M:Csla.Web.Design.CslaDataSourceConfiguration.#ctor">
            <summary>
            Create instance of object.
            </summary>
        </member>
        <member name="M:Csla.Web.Design.CslaDataSourceConfiguration.#ctor(System.Web.UI.DataSourceControl,System.String)">
            <summary>
            Create instance of object.
            </summary>
            <param name="control">Reference to the data source control.</param>
            <param name="oldTypeName">Existing type name.</param>
        </member>
        <member name="F:Csla.Web.Design.CslaDataSourceConfiguration.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Csla.Web.Design.CslaDataSourceConfiguration.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Csla.Web.Design.CslaDataSourceConfiguration.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Csla.Web.Design.CslaDataSourceConfiguration.TypeName">
            <summary>
            Gets the type name entered by the user.
            </summary>
        </member>
        <member name="T:Csla.Web.Design.CslaDataSourceDesigner">
            <summary>
            Implements designer support for CslaDataSource.
            </summary>
        </member>
        <member name="M:Csla.Web.Design.CslaDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initialize the designer component.
            </summary>
            <param name="component">The CslaDataSource control to 
            be designed.</param>
        </member>
        <member name="M:Csla.Web.Design.CslaDataSourceDesigner.GetView(System.String)">
            <summary>
            Returns the default view for this designer.
            </summary>
            <param name="viewName">Ignored</param>
            <returns></returns>
            <remarks>
            This designer supports only a "Default" view.
            </remarks>
        </member>
        <member name="M:Csla.Web.Design.CslaDataSourceDesigner.GetViewNames">
            <summary>
            Return a list of available views.
            </summary>
            <remarks>
            This designer supports only a "Default" view.
            </remarks>
        </member>
        <member name="M:Csla.Web.Design.CslaDataSourceDesigner.RefreshSchema(System.Boolean)">
            <summary>
            Refreshes the schema for the data.
            </summary>
            <param name="preferSilent"></param>
            <remarks></remarks>
        </member>
        <member name="M:Csla.Web.Design.CslaDataSourceDesigner.Configure">
            <summary>
            Invoke the design time configuration
            support provided by the control.
            </summary>
        </member>
        <member name="P:Csla.Web.Design.CslaDataSourceDesigner.CanRefreshSchema">
            <summary>
            Get a value indicating whether the control can
            refresh its schema.
            </summary>
        </member>
        <member name="P:Csla.Web.Design.CslaDataSourceDesigner.CanConfigure">
            <summary>
            Get a value indicating whether this control
            supports design time configuration.
            </summary>
        </member>
        <member name="P:Csla.Web.Design.CslaDataSourceDesigner.AllowResize">
            <summary>
            Get a value indicating whether the control can
            be resized.
            </summary>
        </member>
        <member name="P:Csla.Web.Design.CslaDataSourceDesigner.DataSourceControl">
            <summary>
            Get a reference to the CslaDataSource control being
            designed.
            </summary>
        </member>
        <member name="T:Csla.Web.Design.CslaDesignerDataSourceView">
            <summary>
            Object responsible for providing details about
            data binding to a specific CSLA .NET object.
            </summary>
        </member>
        <member name="M:Csla.Web.Design.CslaDesignerDataSourceView.#ctor(Csla.Web.Design.CslaDataSourceDesigner,System.String)">
            <summary>
            Creates an instance of the object.
            </summary>
        </member>
        <member name="M:Csla.Web.Design.CslaDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
            <summary>
            Returns a set of sample data used to populate
            controls at design time.
            </summary>
            <param name="minimumRows">Minimum number of sample rows
            to create.</param>
            <param name="isSampleData">Returns True if the data
            is sample data.</param>
        </member>
        <member name="P:Csla.Web.Design.CslaDesignerDataSourceView.Schema">
            <summary>
            Returns schema information corresponding to the properties
            of the CSLA .NET business object.
            </summary>
            <remarks>
            All public properties are returned except for those marked
            with the <see cref="T:System.ComponentModel.BrowsableAttribute">Browsable attribute</see>
            as False.
            </remarks>
        </member>
        <member name="P:Csla.Web.Design.CslaDesignerDataSourceView.CanRetrieveTotalRowCount">
            <summary>
            Get a value indicating whether data binding can retrieve
            the total number of rows of data.
            </summary>
        </member>
        <member name="P:Csla.Web.Design.CslaDesignerDataSourceView.CanDelete">
            <summary>
            Get a value indicating whether data binding can directly
            delete the object.
            </summary>
            <remarks>
            If this returns true, the web page must handle the
            <see cref="E:Csla.Web.CslaDataSource.DeleteObject">DeleteObject</see>
            event.
            </remarks>
        </member>
        <member name="P:Csla.Web.Design.CslaDesignerDataSourceView.CanInsert">
            <summary>
            Get a value indicating whether data binding can directly
            insert an instance of the object.
            </summary>
            <remarks>
            If this returns true, the web page must handle the
            <see cref="E:Csla.Web.CslaDataSource.InsertObject">InsertObject</see>
            event.
            </remarks>
        </member>
        <member name="P:Csla.Web.Design.CslaDesignerDataSourceView.CanUpdate">
            <summary>
            Get a value indicating whether data binding can directly
            update or edit the object.
            </summary>
            <remarks>
            If this returns true, the web page must handle the
            <see cref="E:Csla.Web.CslaDataSource.UpdateObject">UpdateObject</see>
            event.
            </remarks>
        </member>
        <member name="P:Csla.Web.Design.CslaDesignerDataSourceView.CanPage">
            <summary>
            Gets a value indicating whether the data source supports
            paging.
            </summary>
        </member>
        <member name="P:Csla.Web.Design.CslaDesignerDataSourceView.CanSort">
            <summary>
            Gets a value indicating whether the data source supports
            sorting.
            </summary>
        </member>
        <member name="T:Csla.Web.Design.ObjectFieldInfo">
            <summary>
            Contains schema information for a single
            object property.
            </summary>
        </member>
        <member name="M:Csla.Web.Design.ObjectFieldInfo.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates an instance of the object.
            </summary>
            <param name="field">The PropertyInfo object
            describing the property.</param>
        </member>
        <member name="P:Csla.Web.Design.ObjectFieldInfo.DataType">
            <summary>
            Gets the data type of the property.
            </summary>
        </member>
        <member name="P:Csla.Web.Design.ObjectFieldInfo.Identity">
            <summary>
            Gets a value indicating whether this property
            is an identity key for the object.
            </summary>
            <remarks>
            Returns the optional value provided through
            the <see cref="T:System.ComponentModel.DataObjectFieldAttribute">DataObjectField</see>
            attribute on the property.
            </remarks>
        </member>
        <member name="P:Csla.Web.Design.ObjectFieldInfo.IsReadOnly">
            <summary>
            Gets a value indicating whether this property
            is readonly.
            </summary>
        </member>
        <member name="P:Csla.Web.Design.ObjectFieldInfo.IsUnique">
            <summary>
            Gets a value indicating whether this property
            must contain a unique value.
            </summary>
            <returns>
            Always returns True if the property
            is marked as a primary key, otherwise
            returns False.
            </returns>
        </member>
        <member name="P:Csla.Web.Design.ObjectFieldInfo.Length">
            <summary>
            Gets the length of the property value.
            </summary>
            <remarks>
            Returns the optional value provided through
            the <see cref="T:System.ComponentModel.DataObjectFieldAttribute">DataObjectField</see>
            attribute on the property.
            </remarks>
        </member>
        <member name="P:Csla.Web.Design.ObjectFieldInfo.Name">
            <summary>
            Gets the property name.
            </summary>
        </member>
        <member name="P:Csla.Web.Design.ObjectFieldInfo.Nullable">
            <summary>
            Gets a value indicating whether the property
            is nullable
            </summary>
            <remarks>
            Returns True for reference types, and for
            value types wrapped in the Nullable generic.
            The result can also be set to True through
            the <see cref="T:System.ComponentModel.DataObjectFieldAttribute">DataObjectField</see>
            attribute on the property.
            </remarks>
        </member>
        <member name="P:Csla.Web.Design.ObjectFieldInfo.Precision">
            <summary>
            Gets the property's numeric precision.
            </summary>
            <returns>Always returns -1.</returns>
        </member>
        <member name="P:Csla.Web.Design.ObjectFieldInfo.PrimaryKey">
            <summary>
            Gets a value indicating whether the property
            is a primary key value.
            </summary>
            <remarks>
            Returns the optional value provided through
            the <see cref="T:System.ComponentModel.DataObjectFieldAttribute">DataObjectField</see>
            attribute on the property.
            </remarks>
        </member>
        <member name="P:Csla.Web.Design.ObjectFieldInfo.Scale">
            <summary>
            Gets the property's scale.
            </summary>
            <returns>Always returns -1.</returns>
        </member>
        <member name="T:Csla.Web.Design.ObjectSchema">
            <summary>
            Object providing access to schema information for
            a business object.
            </summary>
            <remarks>
            This object returns only one view, which corresponds
            to the business object used by data binding.
            </remarks>
        </member>
        <member name="M:Csla.Web.Design.ObjectSchema.#ctor(Csla.Web.Design.CslaDataSourceDesigner,System.String)">
            <summary>
            Creates an instance of the object.
            </summary>
            <param name="designer">Data source designer object.</param>
            <param name="typeName">Type name for
            which the schema should be generated.</param>
        </member>
        <member name="M:Csla.Web.Design.ObjectSchema.GetViews">
            <summary>
            Returns a single element array containing the
            schema for the CSLA .NET business object.
            </summary>
        </member>
        <member name="T:Csla.Web.Design.ObjectViewSchema">
            <summary>
            Object providing schema information for a
            business object.
            </summary>
        </member>
        <member name="M:Csla.Web.Design.ObjectViewSchema.#ctor(Csla.Web.Design.CslaDataSourceDesigner,System.String)">
            <summary>
            Create an instance of the object.
            </summary>
            <param name="site">Site containing the control.</param>
            <param name="typeName">The business class for
            which to generate the schema.</param>
        </member>
        <member name="M:Csla.Web.Design.ObjectViewSchema.GetChildren">
            <summary>
            Returns a list of child schemas belonging to the
            object.
            </summary>
            <remarks>This schema object only returns
            schema for the object itself, so GetChildren will
            always return Nothing (null in C#).</remarks>
        </member>
        <member name="M:Csla.Web.Design.ObjectViewSchema.GetFields">
            <summary>
            Returns schema information for each property on
            the object.
            </summary>
            <remarks>All public properties on the object
            will be reflected in this schema list except
            for those properties where the 
            <see cref="T:System.ComponentModel.BrowsableAttribute">Browsable</see> attribute
            is False.
            </remarks>
        </member>
        <member name="P:Csla.Web.Design.ObjectViewSchema.Name">
            <summary>
            Returns the name of the schema.
            </summary>
        </member>
        <member name="T:Csla.Web.InsertObjectArgs">
            <summary>
            Argument object used in the InsertObject event.
            </summary>
        </member>
        <member name="M:Csla.Web.InsertObjectArgs.#ctor(System.Collections.IDictionary)">
            <summary>
            Create an instance of the object.
            </summary>
        </member>
        <member name="P:Csla.Web.InsertObjectArgs.RowsAffected">
            <summary>
            Gets or sets the number of rows affected
            while handling this event.
            </summary>
            <value></value>
            <returns></returns>
            <remarks>
            The code handling the event should set this
            value to indicate the number of rows affected
            by the operation.
            </remarks>
        </member>
        <member name="P:Csla.Web.InsertObjectArgs.Values">
            <summary>
            The list of data values entered by the user.
            </summary>
            <remarks>It is up to the event handler in the
            web page to take the list of values, put them
            into a business object and to save that object
            into the database.</remarks>
        </member>
        <member name="T:Csla.Web.Security.IdentityWebFactory">
            <summary>
            Verifies user credentials and creates principal/identity based
            on the ASP.NET Membership provider.
            </summary>
            <remarks>
            If the CslaMembershipUseWebServer config setting is false the
            call will be delegated to the app server (if any) behind the
            web server. The default is to use the membership provider and
            database located on the web server.
            </remarks>
        </member>
        <member name="M:Csla.Web.Security.IdentityWebFactory.Fetch(Csla.Security.MembershipIdentity.Criteria)">
            <summary>
            Fetches MembershipIdentity from the server
            </summary>
            <param name="criteria"><see cref="T:Csla.Security.MembershipIdentity.Criteria"/></param>
            <returns></returns>
        </member>
        <member name="T:Csla.Web.Security.IdentityAppFactory">
            <summary>
            Verifies user credentials and creates principal/identity based
            on the ASP.NET Membership provider.
            </summary>
        </member>
        <member name="M:Csla.Web.Security.IdentityAppFactory.Fetch(Csla.Security.MembershipIdentity.Criteria)">
            <summary>
            Fetches MembershipIdentity from the server
            </summary>
            <param name="criteria"><see cref="T:Csla.Security.MembershipIdentity.Criteria"/></param>
            <returns></returns>
        </member>
        <member name="M:Csla.Web.Security.IdentityAppFactory.LoadIdentity(Csla.Security.MembershipIdentity.Criteria,Csla.Security.MembershipIdentity)">
            <summary>
            Verifies the user credentials and loads the identity object with
            values based on the result.
            </summary>
            <param name="criteria">Criteria object.</param>
            <param name="identity">Instance of MembershipIdentity or subclass.</param>
        </member>
        <member name="T:Csla.Web.SelectObjectArgs">
            <summary>
            Argument object used in the SelectObject event.
            </summary>
        </member>
        <member name="M:Csla.Web.SelectObjectArgs.#ctor(System.Web.UI.DataSourceSelectArguments)">
            <summary>
            Creates an instance of the object, initializing
            it with values from data binding.
            </summary>
            <param name="args">Values provided from data binding.</param>
        </member>
        <member name="P:Csla.Web.SelectObjectArgs.BusinessObject">
            <summary>
            Get or set a reference to the business object
            that is created and populated by the SelectObject
            event handler in the web page.
            </summary>
            <value>A reference to a CSLA .NET business object.</value>
        </member>
        <member name="P:Csla.Web.SelectObjectArgs.SortExpression">
            <summary>
            Gets the sort expression that should be used to
            sort the data being returned to the data source
            control.
            </summary>
        </member>
        <member name="P:Csla.Web.SelectObjectArgs.SortProperty">
            <summary>
            Gets the property name for the sort if only one
            property/column name is specified.
            </summary>
            <remarks>
            If multiple properties/columns are specified
            for the sort, you must parse the value from
            <see cref="P:Csla.Web.SelectObjectArgs.SortExpression"/> to find all the
            property names and sort directions for the sort.
            </remarks>
        </member>
        <member name="P:Csla.Web.SelectObjectArgs.SortDirection">
            <summary>
            Gets the sort direction for the sort if only
            one property/column name is specified.
            </summary>
            <remarks>
            If multiple properties/columns are specified
            for the sort, you must parse the value from
            <see cref="P:Csla.Web.SelectObjectArgs.SortExpression"/> to find all the
            property names and sort directions for the sort.
            </remarks>
        </member>
        <member name="P:Csla.Web.SelectObjectArgs.StartRowIndex">
            <summary>
            Gets the index for the first row that will be
            displayed. This should be the first row in
            the resulting collection set into the
            <see cref="P:Csla.Web.SelectObjectArgs.BusinessObject"/> property.
            </summary>
        </member>
        <member name="P:Csla.Web.SelectObjectArgs.MaximumRows">
            <summary>
            Gets the maximum number of rows that
            should be returned as a result of this
            query. For paged collections, this is the
            page size.
            </summary>
        </member>
        <member name="P:Csla.Web.SelectObjectArgs.RetrieveTotalRowCount">
            <summary>
            Gets a value indicating whether the
            query should return the total row count
            through the
            <see cref="T:Csla.Core.IReportTotalRowCount"/>
            interface.
            </summary>
        </member>
        <member name="T:Csla.Web.UpdateObjectArgs">
            <summary>
            Argument object used in the UpdateObject event.
            </summary>
        </member>
        <member name="M:Csla.Web.UpdateObjectArgs.#ctor(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the object.
            </summary>
        </member>
        <member name="P:Csla.Web.UpdateObjectArgs.RowsAffected">
            <summary>
            Gets or sets the number of rows affected
            while handling this event.
            </summary>
            <value></value>
            <returns></returns>
            <remarks>
            The code handling the event should set this
            value to indicate the number of rows affected
            by the operation.
            </remarks>
        </member>
        <member name="P:Csla.Web.UpdateObjectArgs.Keys">
            <summary>
            The list of key values entered by the user.
            </summary>
            <remarks>It is up to the event handler in the
            web page to take the list of values, put them
            into a business object and to save that object
            into the database.</remarks>
        </member>
        <member name="P:Csla.Web.UpdateObjectArgs.Values">
            <summary>
            The list of data values entered by the user.
            </summary>
            <remarks>It is up to the event handler in the
            web page to take the list of values, put them
            into a business object and to save that object
            into the database.</remarks>
        </member>
        <member name="P:Csla.Web.UpdateObjectArgs.OldValues">
            <summary>
            The list of old data values maintained by
            data binding.
            </summary>
            <remarks>It is up to the event handler in the
            web page to take the list of values, put them
            into a business object and to save that object
            into the database.</remarks>
        </member>
    </members>
</doc>
