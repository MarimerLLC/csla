<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Csla.Xaml</name>
    </assembly>
    <members>
        <member name="T:Csla.Xaml.BusyAnimation">
            <summary>
            Displays a busy animation.
            </summary>
        </member>
        <member name="F:Csla.Xaml.BusyAnimation.StepIntervalProperty">
            <summary>
            StepInterval property to control speed of animation.
            </summary>
        </member>
        <member name="F:Csla.Xaml.BusyAnimation.IsRunningProperty">
            <summary>
            IsRunning property to control whether the 
            animation is running.
            </summary>
        </member>
        <member name="M:Csla.Xaml.BusyAnimation.#ctor">
            <summary>
            Creates an instance of the control.
            </summary>
        </member>
        <member name="P:Csla.Xaml.BusyAnimation.StepInterval">
            <summary>
            Gets or sets a property controlling
            the speed of the animation.
            </summary>
        </member>
        <member name="P:Csla.Xaml.BusyAnimation.IsRunning">
            <summary>
            Gets or sets a property controlling
            whether the animation is running.
            </summary>
        </member>
        <member name="T:Csla.Xaml.ErrorEventArgs">
            <summary>
            Contains information about the error that
            has occurred.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ErrorEventArgs.Error">
            <summary>
            Gets the Exception object for the error
            that occurred.
            </summary>
        </member>
        <member name="T:Csla.Xaml.ExecuteEventArgs">
            <summary>
            Arguments passed to a method invoked
            by the Execute trigger action.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ExecuteEventArgs.TriggerSource">
            <summary>
            The control that raised the event that
            triggered invocation of this method.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ExecuteEventArgs.MethodParameter">
            <summary>
            The MethodParameter value provided by
            the designer.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ExecuteEventArgs.TriggerParameter">
            <summary>
            The EventArgs parameter from the event
            that triggered invocation of this method.
            </summary>
        </member>
        <member name="T:Csla.Xaml.IErrorDialog">
            <summary>
            Interface defining the interaction between
            a CslaDataSource and an error dialog control.
            </summary>
        </member>
        <member name="M:Csla.Xaml.IErrorDialog.Register(System.Object)">
            <summary>
            Method called by the CslaDataProvider when the
            error dialog should register any events it
            wishes to handle from the CslaDataProvider.
            </summary>
            <param name="source">Data provider control.</param>
        </member>
        <member name="T:Csla.Xaml.InvokeMethod">
            <summary>
            Invokes a method on a target object when a 
            trigger event is raised from the attached
            UI control.
            </summary>
        </member>
        <member name="F:Csla.Xaml.InvokeMethod.TargetProperty">
            <summary>
            Object containing the method to be invoked.
            </summary>
        </member>
        <member name="M:Csla.Xaml.InvokeMethod.SetTarget(System.Windows.UIElement,System.Object)">
            <summary>
            Sets the object containing the method to be invoked.
            </summary>
            <param name="ctrl">Attached control</param>
            <param name="value">New value</param>
        </member>
        <member name="M:Csla.Xaml.InvokeMethod.GetTarget(System.Windows.UIElement)">
            <summary>
            Gets the object containing the method to be invoked.
            </summary>
            <param name="ctrl">Attached control</param>
        </member>
        <member name="F:Csla.Xaml.InvokeMethod.MethodNameProperty">
            <summary>
            Name of method to be invoked.
            </summary>
        </member>
        <member name="M:Csla.Xaml.InvokeMethod.SetMethodName(System.Windows.UIElement,System.String)">
            <summary>
            Sets the name of method to be invoked.
            </summary>
            <param name="ctrl">Attached control</param>
            <param name="value">New value</param>
        </member>
        <member name="M:Csla.Xaml.InvokeMethod.GetMethodName(System.Windows.UIElement)">
            <summary>
            Gets the name of method to be invoked.
            </summary>
            <param name="ctrl">Attached control</param>
        </member>
        <member name="F:Csla.Xaml.InvokeMethod.TriggerEventProperty">
            <summary>
            Name of event raised by UI control that triggers
            invoking the target method.
            </summary>
        </member>
        <member name="M:Csla.Xaml.InvokeMethod.SetTriggerEvent(System.Windows.UIElement,System.String)">
            <summary>
            Sets the name of event raised by UI control that triggers
            invoking the target method.
            </summary>
            <param name="ctrl">Attached control</param>
            <param name="value">New value</param>
        </member>
        <member name="M:Csla.Xaml.InvokeMethod.GetTriggerEvent(System.Windows.UIElement)">
            <summary>
            Gets the name of event raised by UI control that triggers
            invoking the target method.
            </summary>
            <param name="ctrl">Attached control</param>
        </member>
        <member name="F:Csla.Xaml.InvokeMethod.MethodParameterProperty">
            <summary>
            Parameter value to be passed to invoked method.
            </summary>
        </member>
        <member name="M:Csla.Xaml.InvokeMethod.SetMethodParameter(System.Windows.UIElement,System.Object)">
            <summary>
            Sets the parameter value to be passed to invoked method.
            </summary>
            <param name="ctrl">Attached control</param>
            <param name="value">New value</param>
        </member>
        <member name="M:Csla.Xaml.InvokeMethod.GetMethodParameter(System.Windows.UIElement)">
            <summary>
            Gets the parameter value to be passed to invoked method.
            </summary>
            <param name="ctrl">Attached control</param>
        </member>
        <member name="M:Csla.Xaml.InvokeMethod.#ctor(System.Windows.UIElement)">
            <summary>
            Invokes the target method if all required attached
            property values have been set.
            </summary>
            <param name="ctrl">Attached UI control</param>
        </member>
        <member name="T:Csla.Xaml.IsNotConverter">
            <summary>
            Converts a Boolean value into its inverse.
            </summary>
        </member>
        <member name="M:Csla.Xaml.IsNotConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">Original value.</param>
            <param name="targetType">Desired output type (ignored).</param>
            <param name="parameter">Extra parameter (ignored).</param>
            <param name="culture">Desired culture (ignored).</param>
        </member>
        <member name="M:Csla.Xaml.IsNotConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">Original value.</param>
            <param name="targetType">Desired output type (ignored).</param>
            <param name="parameter">Extra parameter (ignored).</param>
            <param name="culture">Desired culture (ignored).</param>
        </member>
        <member name="T:Csla.Xaml.IViewModel">
            <summary>
            Defines a CSLA .NET viewmodel
            object.
            </summary>
        </member>
        <member name="P:Csla.Xaml.IViewModel.Model">
            <summary>
            Gets or sets the Model property
            of the viewmodel object.
            </summary>
        </member>
        <member name="T:Csla.Xaml.PropertyInfo">
            <summary>
            Expose metastate information about a property.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.#ctor">
            <summary>
            Creates an instance of the object.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.#ctor(System.Boolean)">
            <summary>
            Creates an instance of the object for testing.
            </summary>
            <param name="testing">Test mode parameter.</param>
        </member>
        <member name="F:Csla.Xaml.PropertyInfo.BrokenRulesProperty">
            <summary>
            Gets the broken rules collection from the
            business object.
            </summary>
        </member>
        <member name="F:Csla.Xaml.PropertyInfo.MyDataContextProperty">
            <summary>
            Used to monitor for changes in the binding path.
            </summary>
        </member>
        <member name="F:Csla.Xaml.PropertyInfo.RelativeBindingProperty">
            <summary>
            Used to monitor for changes in the binding path.
            </summary>
        </member>
        <member name="F:Csla.Xaml.PropertyInfo.PropertyProperty">
            <summary>
            Gets or sets the source business
            property to which this control is bound.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.ParseRelativeBinding(System.Windows.Data.BindingExpression)">
            <summary>
            Checks a binding expression to see if it is a relative source binding used in a control template.
            </summary>
            <param name="sourceBinding">The binding expression to parse.</param>
            <returns>If the source binding is a relative source binding, this method 
            finds the proper dependency property on the parent control and returns
            the binding expression for that property.</returns>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.SetSource(System.Boolean)">
            <summary>
            Sets the source binding and updates status.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.SetSource(System.Object)">
            <summary>
            Sets the source binding and updates status.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.SetBindingValues(System.Windows.Data.BindingExpression)">
            <summary>
            Sets the binding values for this instance.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.GetRealSource(System.Object,System.String)">
            <summary>
            Gets the real source helper method.
            </summary>
            <param name="source">The source.</param>
            <param name="bindingPath">The binding path.</param>
            <returns></returns>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.GetRelativePath(System.Object,System.String)">
            <summary>
            Gets the part of the binding path relevant to the given source.
            </summary>
            <param name="source">The source.</param>
            <param name="bindingPath">The binding path.</param>
            <returns></returns>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.UpdateState">
            <summary>
            Updates the state on control Property.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of the changed property.</param>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.BrokenRules">
            <summary>
            Gets the broken rules collection from the
            business object.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.Property">
            <summary>
            Gets or sets the source business
            property to which this control is bound.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.Source">
            <summary>
            Gets or sets the Source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.BindingPath">
            <summary>
            Gets or sets the binding path.
            </summary>
            <value>The binding path.</value>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.CanRead">
            <summary>
            Gets a value indicating whether the user
            is authorized to read the property.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.CanWrite">
            <summary>
            Gets a value indicating whether the user
            is authorized to write the property.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.IsBusy">
            <summary>
            Gets a value indicating whether the property
            is busy with an asynchronous operation.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.IsValid">
            <summary>
            Gets a value indicating whether the 
            property is valid.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.RuleSeverity">
            <summary>
            Gets a valud indicating the worst
            severity of all broken rules
            for this property (if IsValid is
            false).
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.RuleDescription">
            <summary>
            Gets the description of the most severe
            broken rule for this property.
            </summary>
        </member>
        <member name="E:Csla.Xaml.PropertyInfo.PropertyChanged">
            <summary>
            Event raised when a property has changed.
            </summary>
        </member>
        <member name="T:Csla.Xaml.PropertyStatus">
            <summary>
            Displays validation information for a business
            object property, and manipulates an associated
            UI control based on the business object's
            authorization rules.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyStatus.#ctor">
            <summary>
            Creates an instance of the object.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyStatus.OnApplyTemplate">
            <summary>
            Applies the visual template.
            </summary>
        </member>
        <member name="F:Csla.Xaml.PropertyStatus.PropertyProperty">
            <summary>
            Gets or sets the source business
            property to which this control is bound.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyStatus.SetSource(System.Boolean)">
            <summary>
            Sets the source binding and updates status.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyStatus.SetSource(System.Object)">
            <summary>
            Sets the source binding and updates status.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyStatus.SetBindingValues">
            <summary>
            Sets the binding values for this instance.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyStatus.GetRealSource(System.Object,System.String)">
            <summary>
            Gets the real source helper method.
            </summary>
            <param name="source">The source.</param>
            <param name="bindingPath">The binding path.</param>
            <returns></returns>
        </member>
        <member name="F:Csla.Xaml.PropertyStatus.BrokenRulesProperty">
            <summary>
            Gets the broken rules collection from the
            business object.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyStatus.UpdateState">
            <summary>
            Updates the state on control Property.
            </summary>
        </member>
        <member name="F:Csla.Xaml.PropertyStatus._lastState">
            <summary>
            Contains tha last status on this control
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyStatus.ClearState">
            <summary>
            Clears the state.
            Must be called whenever the DataContext is updated (and new object is selected).
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyStatus.GoToState(System.Boolean)">
            <summary>
            Updates the status of the Property in UI
            </summary>
            <param name="useTransitions">if set to <c>true</c> then use transitions.</param>
        </member>
        <member name="M:Csla.Xaml.PropertyStatus.FindChild(System.Windows.DependencyObject,System.String)">
            <summary>
            Find child dependency property.
            </summary>
            <param name="parent">The parent.</param>
            <param name="name">The name.</param>
            <returns>DependencyObject child</returns>
        </member>
        <member name="M:Csla.Xaml.PropertyStatus.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of the changed property.</param>
        </member>
        <member name="P:Csla.Xaml.PropertyStatus.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether this DependencyProperty field is read only.
            </summary>
            <value>
            <c>true</c> if this DependencyProperty is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Csla.Xaml.PropertyStatus.Property">
            <summary>
            Gets or sets the source business
            property to which this control is bound.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyStatus.Source">
            <summary>
            Gets or sets the Source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Csla.Xaml.PropertyStatus.BindingPath">
            <summary>
            Gets or sets the binding path.
            </summary>
            <value>The binding path.</value>
        </member>
        <member name="P:Csla.Xaml.PropertyStatus.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
            <value>
            The name of the property.
            </value>
        </member>
        <member name="P:Csla.Xaml.PropertyStatus.BrokenRules">
            <summary>
            Gets the broken rules collection from the
            business object.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyStatus.CanRead">
            <summary>
            Gets a value indicating whether the user
            is authorized to read the property.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyStatus.CanWrite">
            <summary>
            Gets a value indicating whether the user
            is authorized to write the property.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyStatus.IsBusy">
            <summary>
            Gets a value indicating whether the property
            is busy with an asynchronous operation.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyStatus.IsValid">
            <summary>
            Gets a value indicating whether the
            property is valid.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyStatus.RuleSeverity">
            <summary>
            Gets a valud indicating the worst
            severity of all broken rules
            for this property (if IsValid is
            false).
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyStatus.RuleDescription">
            <summary>
            Gets the description of the most severe
            broken rule for this property.
            </summary>
        </member>
        <member name="E:Csla.Xaml.PropertyStatus.PropertyChanged">
            <summary>
            Event raised when a property has changed.
            </summary>
        </member>
        <member name="T:Csla.Xaml.TriggerAction">
            <summary>
            Control used to invoke a method on the DataContext
            based on an event being raised by a UI control.
            </summary>
        </member>
        <member name="M:Csla.Xaml.TriggerAction.#ctor">
            <summary>
            Creates an instance of the object.
            </summary>
        </member>
        <member name="M:Csla.Xaml.TriggerAction.CallMethod(System.Object,System.EventArgs)">
            <summary>
            Invokes target method.
            </summary>
        </member>
        <member name="F:Csla.Xaml.TriggerAction.TargetControlProperty">
            <summary>
            Gets or sets the target UI control.
            </summary>
        </member>
        <member name="F:Csla.Xaml.TriggerAction.TriggerEventProperty">
            <summary>
            Gets or sets the name of the event
            that will trigger the action.
            </summary>
        </member>
        <member name="F:Csla.Xaml.TriggerAction.MethodNameProperty">
            <summary>
            Gets or sets the name of the method
            to be invoked.
            </summary>
        </member>
        <member name="F:Csla.Xaml.TriggerAction.MethodParameterProperty">
            <summary>
            Gets or sets the value of a parameter to
            be passed to the invoked method.
            </summary>
        </member>
        <member name="F:Csla.Xaml.TriggerAction.RebindParameterDynamicallyProperty">
            <summary>
            Gets or sets a value indicating whether the
            MethodParameter value should be dynamically rebound
            before invoking the target method.
            </summary>
        </member>
        <member name="P:Csla.Xaml.TriggerAction.TargetControl">
            <summary>
            Gets or sets the target UI control.
            </summary>
        </member>
        <member name="P:Csla.Xaml.TriggerAction.TriggerEvent">
            <summary>
            Gets or sets the name of the event
            that will trigger the action.
            </summary>
        </member>
        <member name="P:Csla.Xaml.TriggerAction.MethodName">
            <summary>
            Gets or sets the name of the method
            to be invoked.
            </summary>
        </member>
        <member name="P:Csla.Xaml.TriggerAction.MethodParameter">
            <summary>
            Gets or sets the value of a parameter to
            be passed to the invoked method.
            </summary>
        </member>
        <member name="P:Csla.Xaml.TriggerAction.RebindParameterDynamically">
            <summary>
            Gets or sets a value indicating whether the
            MethodParameter value should be dynamically rebound
            before invoking the target method.
            </summary>
        </member>
        <member name="T:Csla.Xaml.ViewModel`1">
            <summary>
            Base class used to create ViewModel objects,
            with pre-existing verbs for use by
            InvokeMethod or Invoke.
            </summary>
            <typeparam name="T">Type of the Model object.</typeparam>
        </member>
        <member name="T:Csla.Xaml.ViewModelBase`1">
            <summary>
            Base class used to create ViewModel objects that
            implement their own commands/verbs/actions.
            </summary>
            <typeparam name="T">Type of the Model object.</typeparam>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.#ctor">
            <summary>
            Create new instance of base class used to create ViewModel objects that
            implement their own commands/verbs/actions.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.InitAsync">
            <summary>
            Method used to perform async initialization of the
            viewmodel. This method is usually invoked immediately
            following construction of the object instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.DoInitAsync">
            <summary>
            Override this method to implement async initialization of
            the model object. The result of this method is used
            to set the Model property of the viewmodel.
            </summary>
            <returns>A Task that creates the model object.</returns>
        </member>
        <member name="F:Csla.Xaml.ViewModelBase`1.ModelProperty">
            <summary>
            Gets or sets the Model object.
            </summary>
        </member>
        <member name="F:Csla.Xaml.ViewModelBase`1.ManageObjectLifetimeProperty">
            <summary>
            Gets or sets a value indicating whether the
            ViewModel should automatically managed the
            lifetime of the Model.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnError(System.Exception)">
            <summary>
            Raises ErrorOccurred event when an error occurs
            during processing.
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.SetPropertiesAtObjectLevel">
            <summary>
            This method is only called from constuctor to set default values immediately.
            Sets the properties at object level.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.BeginRefresh(System.Action{System.EventHandler{Csla.DataPortalResult{`0}}})">
            <summary>
            Creates or retrieves a new instance of the 
            Model by invoking a static factory method.
            </summary>
            <param name="factoryMethod">Static factory method action.</param>
            <example>BeginRefresh(BusinessList.BeginGetList)</example>
            <example>BeginRefresh(handler => BusinessList.BeginGetList(handler))</example>
            <example>BeginRefresh(handler => BusinessList.BeginGetList(id, handler))</example>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.BeginRefresh(System.String,System.Object[])">
            <summary>
            Creates or retrieves a new instance of the 
            Model by invoking a static factory method.
            </summary>
            <param name="factoryMethod">Name of the static factory method.</param>
            <param name="factoryParameters">Factory method parameters.</param>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.BeginRefresh(System.String)">
            <summary>
            Creates or retrieves a new instance of the 
            Model by invoking a static factory method.
            </summary>
            <param name="factoryMethod">Name of the static factory method.</param>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnRefreshing(`0)">
            <summary>
            Method called after a refresh operation 
            has completed and before the model is updated 
            (when successful).
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnRefreshed">
            <summary>
            Method called after a refresh operation 
            has completed (whether successful or
            not).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.SaveAsync">
            <summary>
            Saves the Model, first committing changes
            if ManagedObjectLifetime is true.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.BeginSave">
            <summary>
            Saves the Model, first committing changes
            if ManagedObjectLifetime is true.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnSaving(`0)">
            <summary>
            Method called after a save operation 
            has completed and before Model is updated 
            (when successful).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnSaved">
            <summary>
            Method called after a save operation 
            has completed (whether successful or
            not).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.DoCancel">
            <summary>
            Cancels changes made to the model 
            if ManagedObjectLifetime is true.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.BeginAddNew">
            <summary>
            Adds a new item to the Model (if it
            is a collection).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.DoRemove(System.Object)">
            <summary>
            Removes an item from the Model (if it
            is a collection).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.DoDelete">
            <summary>
            Marks the Model for deletion (if it is an
            editable root object).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnPropertyChanged(System.String)">
            <summary>
            Raise the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of the changed property.</param>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnModelChanged(`0,`0)">
            <summary>
            Invoked when the Model changes, allowing
            event handlers to be unhooked from the old
            object and hooked on the new object.
            </summary>
            <param name="oldValue">Previous Model reference.</param>
            <param name="newValue">New Model reference.</param>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnSetProperties">
            <summary>
            Override this method to hook into to logic of setting properties when model is changed or edited. 
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.Model">
            <summary>
            Gets or sets the Model object.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.ManageObjectLifetime">
            <summary>
            Gets or sets a value indicating whether the
            ViewManageObjectLifetime should automatically managed the
            lifetime of the ManageObjectLifetime.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.Error">
            <summary>
            Gets the Error object corresponding to the
            last asyncronous operation.
            </summary>
        </member>
        <member name="E:Csla.Xaml.ViewModelBase`1.ErrorOccurred">
            <summary>
            Event raised when an error occurs during processing.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.IsBusy">
            <summary>
            Gets a value indicating whether this object is
            executing an asynchronous process.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.IsDirty">
            <summary>
            Gets a value indicating whether the Model
            has been changed.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.IsValid">
            <summary>
            Gets a value indicating whether the Model
            is currently valid (has no broken rules).
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanSave">
            <summary>
            Gets a value indicating whether the Model
            can currently be saved.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanCancel">
            <summary>
            Gets a value indicating whether the Model
            can currently be canceled.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanCreate">
            <summary>
            Gets a value indicating whether an instance
            of the Model
            can currently be created.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanDelete">
            <summary>
            Gets a value indicating whether the Model
            can currently be deleted.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanFetch">
            <summary>
            Gets a value indicating whether an instance
            of the Model
            can currently be retrieved.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanRemove">
            <summary>
            Gets a value indicating whether the Model
            can currently be removed.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanAddNew">
            <summary>
            Gets a value indicating whether the Model
            can currently be added.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanCreateObject">
            <summary>
            Gets a value indicating whether the current
            user is authorized to create a Model.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanGetObject">
            <summary>
            Gets a value indicating whether the current
            user is authorized to retrieve a Model.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanEditObject">
            <summary>
            Gets a value indicating whether the current
            user is authorized to save (insert or update
            a Model.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanDeleteObject">
            <summary>
            Gets a value indicating whether the current
            user is authorized to delete
            a Model.
            </summary>
        </member>
        <member name="E:Csla.Xaml.ViewModelBase`1.PropertyChanged">
            <summary>
            Event raised when a property changes.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModel`1.Save(System.Object,Csla.Xaml.ExecuteEventArgs)">
            <summary>
            Saves the Model, first committing changes
            if ManagedObjectLifetime is true.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModel`1.Cancel(System.Object,Csla.Xaml.ExecuteEventArgs)">
            <summary>
            Cancels changes made to the model 
            if ManagedObjectLifetime is true.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModel`1.AddNew(System.Object,Csla.Xaml.ExecuteEventArgs)">
            <summary>
            Adds a new item to the Model (if it
            is a collection).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModel`1.Remove(System.Object,Csla.Xaml.ExecuteEventArgs)">
            <summary>
            Removes an item from the Model (if it
            is a collection).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModel`1.Delete(System.Object,Csla.Xaml.ExecuteEventArgs)">
            <summary>
            Marks the Model for deletion (if it is an
            editable root object).
            </summary>
        </member>
        <member name="T:Csla.Xaml.BookmarkInformation">
            <summary>
            This class is used to keep track of bookmarks within Navigator.
            </summary>
        </member>
        <member name="M:Csla.Xaml.BookmarkInformation.#ctor(System.String,System.String,System.String)">
            <summary>
            New instance of bookmark.
            </summary>
            <param name="controlTypeName">
            Assembly qualified name of the control class to display.
            </param>
            <param name="parameters">
            Parameters that will be passed to control.  Single string is passed
            in, and controls assumes responcibility for parsing it.
            </param>
            <param name="title">
            Title of the bookmark.
            </param>
        </member>
        <member name="P:Csla.Xaml.BookmarkInformation.ControlTypeName">
            <summary>
            Assembly qualified name of the control class to display.
            </summary>
        </member>
        <member name="P:Csla.Xaml.BookmarkInformation.Parameters">
            <summary>
            Parameters that will be passed to control.  Single string is passed
            in, and controls assumes responcibility for parsing it.
            </summary>
        </member>
        <member name="P:Csla.Xaml.BookmarkInformation.Title">
            <summary>
            Title of the bookmark.
            </summary>
        </member>
        <member name="T:Csla.Xaml.BrokenRuleSeverityConverter">
            <summary>
            Converts broken rule severities into an
            appropriate image for display.
            </summary>
        </member>
        <member name="M:Csla.Xaml.BrokenRuleSeverityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts broken rule severities into an
            appropriate image for display.
            </summary>
            <param name="value">Severity value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">Parameter</param>
            <param name="culture">Culture</param>
        </member>
        <member name="M:Csla.Xaml.BrokenRuleSeverityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Returns RuleSeverity.Errro
            </summary>
            <param name="value">Ignored</param>
            <param name="targetType">Ignored</param>
            <param name="parameter">Ignored</param>
            <param name="culture">Ignored</param>
            <returns></returns>
        </member>
        <member name="T:Csla.Xaml.ControlNameFactory">
            <summary>
            Maps controls to names and names to controls.
            </summary>
        </member>
        <member name="T:Csla.Xaml.IControlNameFactory">
            <summary>
            Defines a factory object that maps
            controls to names and names to controls.
            </summary>
        </member>
        <member name="M:Csla.Xaml.IControlNameFactory.ControlToControlName(System.Windows.Controls.Control)">
            <summary>
            Convert full name of the control to name that will be used for 
            creation of bookmakrs
            </summary>
            <param name="control">
            User Control or Control object that can be used
            by navigator as a target.
            </param>
            <returns>Short name of control used for bookmarks</returns>
        </member>
        <member name="M:Csla.Xaml.IControlNameFactory.ControlNameToControl(System.String)">
            <summary>
            Convert short name of control used for bookmarks to
            User Control or Control object
            </summary>
            <param name="controlName">Short name of control used for bookmarks</param>
            <returns>User Control or Control object</returns>
        </member>
        <member name="M:Csla.Xaml.ControlNameFactory.ControlToControlName(System.Windows.Controls.Control)">
            <summary>
            Convert full name of the control to name that will be used for 
            creation of bookmakrs
            </summary>
            <param name="control">
            User Control or Control object that can be used
            by navigator as a target.
            </param>
            <returns>Short name of control used for bookmarks</returns>
        </member>
        <member name="M:Csla.Xaml.ControlNameFactory.ControlNameToControl(System.String)">
            <summary>
            Convert short name of control used for bookmarks to
            User Control or Control object
            </summary>
            <param name="controlName">Short name of control used for bookmarks</param>
            <returns>User Control or Control object</returns>
        </member>
        <member name="T:Csla.Xaml.CslaDataProvider">
            <summary>
            Creates, retrieves and manages business objects
            from XAML in a form.
            </summary>
        </member>
        <member name="M:Csla.Xaml.CslaDataProvider.OnDataChanged">
            <summary>
            Raises the DataChanged event.
            </summary>
        </member>
        <member name="M:Csla.Xaml.CslaDataProvider.OnSaved(System.Object,System.Exception,System.Object)">
            <summary>
            Raises the Saved event.
            </summary>
            <param name="newObject">Reference to new
            object resulting from the save.</param>
            <param name="error">Reference to any exception
            object that may have resulted from the operation.</param>
            <param name="userState">Reference to any user state
            object provided by the caller.</param>
        </member>
        <member name="F:Csla.Xaml.CslaDataProvider.ObjectInstanceProperty">
            <summary>
            Gets or sets a reference to the data
            object.
            </summary>
        </member>
        <member name="M:Csla.Xaml.CslaDataProvider.Refresh">
            <summary>
            Causes the data provider to execute the
            factory method, refreshing the business
            object by creating or retrieving a new
            instance.
            </summary>
        </member>
        <member name="M:Csla.Xaml.CslaDataProvider.Cancel">
            <summary>
            Cancels any changes to the object.
            </summary>
        </member>
        <member name="M:Csla.Xaml.CslaDataProvider.Save">
            <summary>
            Accepts any changes to the object and
            invokes the object's BeginSave() method.
            </summary>
        </member>
        <member name="M:Csla.Xaml.CslaDataProvider.Delete">
            <summary>
            Marks an editable root object for deletion.
            </summary>
        </member>
        <member name="M:Csla.Xaml.CslaDataProvider.AddNewItem">
            <summary>
            Begins an async add new operation to add a 
            new item to an editable list business object.
            </summary>
        </member>
        <member name="M:Csla.Xaml.CslaDataProvider.RemoveItem(System.Object,Csla.Xaml.ExecuteEventArgs)">
            <summary>
            Removes an item from an editable list
            business object.
            </summary>
            <param name="sender">Object invoking this method.</param>
            <param name="e">
            ExecuteEventArgs, where MethodParameter contains 
            the item to be removed from the list.
            </param>
        </member>
        <member name="M:Csla.Xaml.CslaDataProvider.Rebind">
            <summary>
            Causes the data provider to trigger data binding
            to rebind to the current business object.
            </summary>
        </member>
        <member name="M:Csla.Xaml.CslaDataProvider.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">
            Name of the changed property
            </param>
        </member>
        <member name="E:Csla.Xaml.CslaDataProvider.DataChanged">
            <summary>
            Event raised when the data object has
            changed to another data object, or when
            an exception has occurred during processing.
            </summary>
        </member>
        <member name="E:Csla.Xaml.CslaDataProvider.Saved">
            <summary>
            Event raised when a Save operation
            is complete.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.IsBusy">
            <summary>
            Gets a value indicating whether this object is
            executing an asynchronous process.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.IsNotBusy">
            <summary>
            Gets a value indicating whether this object is
            not executing an asynchronous process.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.ObjectInstance">
            <summary>
            Gets or sets a reference to the data
            object.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.Data">
            <summary>
            Gets a reference to the data object.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.ManageObjectLifetime">
            <summary>
            Gets or sets a value indicating whether
            the business object's lifetime should
            be managed automatically.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.IsInitialLoadEnabled">
            <summary>
            Gets or sets a value indicating whether the
            data provider should load data as the page
            is loaded.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.ObjectType">
            <summary>
            Gets or sets the assembly qualified type
            name for the business object to be
            created or retrieved.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.FactoryMethod">
            <summary>
            Gets or sets the name of the static factory
            method to be invoked to create or retrieve
            the business object.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.FactoryParameters">
            <summary>
            Gets or sets a collection of parameter values
            that are passed to the factory method.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.Error">
            <summary>
            Gets a reference to the Exception object
            (if any) from the last data portal operation.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.DataChangedHandler">
            <summary>
            Gets or sets a reference to an object that
            will handle the DataChanged event raised
            by this data provider.
            </summary>
            <remarks>
            This property is designed to 
            reference an IErrorDialog control.
            </remarks>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.CanSave">
            <summary>
            Gets a value indicating whether the business object
            can currently be saved.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.CanCancel">
            <summary>
            Gets a value indicating whether the business object
            can currently be canceled.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.CanCreate">
            <summary>
            Gets a value indicating whether an instance
            of the business object
            can currently be created.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.CanDelete">
            <summary>
            Gets a value indicating whether the business object
            can currently be deleted.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.CanFetch">
            <summary>
            Gets a value indicating whether an instance
            of the business object
            can currently be retrieved.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.CanRemoveItem">
            <summary>
            Gets a value indicating whether the business object
            can currently be removed.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.CanAddNewItem">
            <summary>
            Gets a value indicating whether the business object
            can currently be added.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.CanCreateObject">
            <summary>
            Gets a value indicating whether the current
            user is authorized to create an object.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.CanGetObject">
            <summary>
            Gets a value indicating whether the current
            user is authorized to retrieve an object.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.CanEditObject">
            <summary>
            Gets a value indicating whether the current
            user is authorized to save (insert or update
            an object.
            </summary>
        </member>
        <member name="P:Csla.Xaml.CslaDataProvider.CanDeleteObject">
            <summary>
            Gets a value indicating whether the current
            user is authorized to delete
            an object.
            </summary>
        </member>
        <member name="E:Csla.Xaml.CslaDataProvider.PropertyChanged">
            <summary>
            Event raised when a property of the
            object has changed.
            </summary>
        </member>
        <member name="T:Csla.Xaml.ErrorDialog">
            <summary>
            Displays an error dialog for any exceptions
            that occur in a CslaDataProvider.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ErrorDialog.#ctor">
            <summary>
            Creates an instance of the control.
            </summary>
        </member>
        <member name="F:Csla.Xaml.ErrorDialog.SourceProperty">
            <summary>
            Gets or sets the CslaDataProvider
            control to which the ErrorDialog control
            is bound.
            </summary>
        </member>
        <member name="F:Csla.Xaml.ErrorDialog.DialogTitleProperty">
            <summary>
            Gets or sets the title of the error
            dialog.
            </summary>
        </member>
        <member name="F:Csla.Xaml.ErrorDialog.DialogFirstLineProperty">
            <summary>
            Gets or sets the first line of text displayed
            within the error dialog (before the
            exception message).
            </summary>
        </member>
        <member name="F:Csla.Xaml.ErrorDialog.ShowExceptionDetailProperty">
            <summary>
            Gets or sets a value indicating whether
            the dialog should include exception details
            or just the exception summary message.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ErrorDialog.Source">
            <summary>
            Gets or sets the CslaDataProvider
            control to which the ErrorDialog control
            is bound.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ErrorDialog.DialogTitle">
            <summary>
            Gets or sets the title of the error
            dialog.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ErrorDialog.DialogFirstLine">
            <summary>
            Gets or sets the first line of text displayed
            within the error dialog (before the
            exception message).
            </summary>
        </member>
        <member name="P:Csla.Xaml.ErrorDialog.ShowExceptionDetail">
            <summary>
            Gets or sets the first line of text displayed
            within the error dialog (before the
            exception message).
            </summary>
        </member>
        <member name="T:Csla.Xaml.ISupportNavigation">
            <summary>
            Interface that defines template that Navigatgor 
            control can understand.  This interface should be 
            implemented by controls that would rely on Navigator
            object to show them.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ISupportNavigation.SetParameters(System.String)">
            <summary>
            This method is called by Navigatgor in order
            to pass parameters from a bookmark into 
            the shown control
            </summary>
            <param name="parameters">
            Parameters passed as string.  Is is up to control
            to parse them
            </param>
        </member>
        <member name="P:Csla.Xaml.ISupportNavigation.Title">
            <summary>
            Get the title of the control
            </summary>
        </member>
        <member name="E:Csla.Xaml.ISupportNavigation.LoadCompleted">
            <summary>
            This event should be raised after the control is populated with data
            </summary>
        </member>
        <member name="P:Csla.Xaml.ISupportNavigation.CreateBookmarkAfterLoadCompleted">
            <summary>
            If set to false, bookamrk will be created as part of navigation.
            If set to true, bokmakr will be created when LoadCompleted
            event is raised by the control
            </summary>
        </member>
        <member name="T:Csla.Xaml.NavigationBookmarkProcessedEventArgs">
            <summary>
            Event arguments class that is part of Navigator event
            that is fired after a bookmakr has been processed
            in response to browser's back or forward button processing.
            </summary>
        </member>
        <member name="M:Csla.Xaml.NavigationBookmarkProcessedEventArgs.#ctor(System.Boolean)">
            <summary>
            New instance of event arguments
            </summary>
            <param name="success">
            True if bookamrk was processed successfully.
            </param>
        </member>
        <member name="P:Csla.Xaml.NavigationBookmarkProcessedEventArgs.Success">
            <summary>
            Indicates if bookmakr was processed successfully
            and control is displayed.
            </summary>
        </member>
        <member name="T:Csla.Xaml.NavigationEventArgs">
            <summary>
            This event arguments class is part of BeforeNavigation
            event of Navigator.
            </summary>
        </member>
        <member name="M:Csla.Xaml.NavigationEventArgs.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            New instance of NavigationEventArgs.
            </summary>
            <param name="controlTypeName">
            Assembly qualified name of the control class to display.
            </param>
            <param name="parameters">
            Parameters that will be passed to control.  Single string is passed
            in, and controls assumes responcibility for parsing it.
            </param>
            <param name="isInitiatedByBrowserButton">
            Flag indicating whether the action was initiated by a
            browser button.
            </param>
        </member>
        <member name="P:Csla.Xaml.NavigationEventArgs.ControlTypeName">
            <summary>
            Assembly qualified name of the control class to display.
            </summary>
        </member>
        <member name="P:Csla.Xaml.NavigationEventArgs.Parameters">
            <summary>
            Parameters that will be passed to control.  Single string is passed
            in, and controls assumes responcibility for parsing it.
            You can modify this parameter string as needed.
            </summary>
        </member>
        <member name="P:Csla.Xaml.NavigationEventArgs.Cancel">
            <summary>
            Set to True if you want to cancel from BeforeNavigation event
            </summary>
        </member>
        <member name="P:Csla.Xaml.NavigationEventArgs.RedirectToOnCancel">
            <summary>
            If navigation is cancelled, optionaly redirect to the
            control specified in this property.
            </summary>
        </member>
        <member name="P:Csla.Xaml.NavigationEventArgs.IsInitiatedByBrowserButton">
            <summary>
            If true, the action was intiated by the user clicking on 
            a broser's back or forward button.  Otherwise, it was manual
            navigatio via direct invoke of Navigate method of Navigator
            </summary>
        </member>
        <member name="T:Csla.Xaml.Navigator">
            <summary>
            Class that shows control in a specified container in
            responce to other controls' events.
            It is implemented using Singleton pattern, ensuring 
            one instance per application.
            </summary>
        </member>
        <member name="M:Csla.Xaml.Navigator.OnBeforeNavigation(Csla.Xaml.NavigationEventArgs)">
            <summary>
            Method that raises BeforeNavigation event.
            </summary>
            <param name="args">
            Event argeuments for the event.
            </param>
        </member>
        <member name="M:Csla.Xaml.Navigator.OnAfterNavigation">
            <summary>
            Method that raises AfterNavigation event.
            </summary>
        </member>
        <member name="M:Csla.Xaml.Navigator.OnAfterBookmarkProcessing(System.Boolean)">
            <summary>
            Method that raises AfterBookmarkProcessing event.
            </summary>
            <param name="success">
            Indicates if bookmakr was successfully processed
            </param>
        </member>
        <member name="M:Csla.Xaml.Navigator.HandleNavigate(System.Windows.Browser.ScriptObject)">
            <summary>
            Invoked by the browser
            </summary>
            <param name="state">State of the browser.</param>
        </member>
        <member name="M:Csla.Xaml.Navigator.RegisterNavigator">
            <summary>
            Register navigatgor with the browser in order to subscribe
            to history events.  This methos assumes that 
            Silverlight control that is embedded in the web page
            has Id of Xaml1
            </summary>
        </member>
        <member name="M:Csla.Xaml.Navigator.RegisterNavigator(System.String,Csla.Xaml.IControlNameFactory)">
            <summary>
            Register navigatgor with the browser in order to subscribe
            to history events.
            </summary>
            <param name="silverlightControlNameInWebPage">
            Name of the Silverlight control that is embedded in the web page.
            Default value is Xaml1
            </param>
            <param name="controlNameFactory">
            Control name factory to be used with Navigator
            </param>
        </member>
        <member name="M:Csla.Xaml.Navigator.RegisterNavigator(System.String)">
            <summary>
            Register navigatgor with the browser in order to subscribe
            to history events.
            </summary>
            <param name="silverlightControlNameInWebPage">
            Name of the Silverlight control that is embedded in the web page.
            Default value is Xaml1
            </param>
        </member>
        <member name="M:Csla.Xaml.Navigator.Navigate(System.String)">
            <summary>
            Show specified control in ContentControl
            specified by ContentPlaceholder property.
            </summary>
            <param name="controlTypeName">
            Assembly qualified control name to show.
            </param>
        </member>
        <member name="M:Csla.Xaml.Navigator.Navigate(System.String,System.String)">
            <summary>
            Show specified control in ContentControl
            specified by ContentPlaceholder property.
            </summary>
            <param name="controlTypeName">
            Assembly qualified control name to show.
            </param>
            <param name="paramerers">
            String that incorporates parameters needed for new control
            </param>
        </member>
        <member name="M:Csla.Xaml.Navigator.ProcessInitialNavigation">
            <summary>
            Call this after setting up content placeholder in order to 
            handle cold navigation to a bookrmak via Favorites features
            for example.
            </summary>
        </member>
        <member name="P:Csla.Xaml.Navigator.BookmarkKey">
            <summary>
            Default bookmark key
            </summary>
        </member>
        <member name="P:Csla.Xaml.Navigator.BookmarkPartsSeparator">
            <summary>
            Default bookmakr parts (control name, title, parameters) separator
            </summary>
        </member>
        <member name="P:Csla.Xaml.Navigator.ControlNameFactory">
            <summary>
            Control name factory object
            </summary>
        </member>
        <member name="E:Csla.Xaml.Navigator.BeforeNavigation">
            <summary>
            Event that occurs priot to showing of a target control
            </summary>
        </member>
        <member name="E:Csla.Xaml.Navigator.AfterNavigation">
            <summary>
            Event that occurs after control is shown
            </summary>
        </member>
        <member name="E:Csla.Xaml.Navigator.AfterBookmarkProcessing">
            <summary>
            Event that occurs after a bookark has been retrived and processed
            in response to browser's back or forward buttons.
            </summary>
        </member>
        <member name="P:Csla.Xaml.Navigator.Current">
            <summary>
            Get the current instance of navigator for the application.
            </summary>
        </member>
        <member name="P:Csla.Xaml.Navigator.ContentPlaceholder">
            <summary>
            ContentControl in which the desired control will be shown.
            </summary>
        </member>
        <member name="T:Csla.Xaml.NavigatorProvider">
            <summary>
            Navigator provider object.
            </summary>
        </member>
        <member name="F:Csla.Xaml.NavigatorProvider.NavigatorProviderProperty">
            <summary>
            Navigator provider instance
            </summary>
        </member>
        <member name="M:Csla.Xaml.NavigatorProvider.SetNavigatorProvider(System.Windows.UIElement,System.Object)">
            <summary>
            Set navigator provider
            </summary>
            <param name="element">
            UI element to set navigator provider on.
            </param>
            <param name="value">
            Instance of navigator provider.
            </param>
        </member>
        <member name="M:Csla.Xaml.NavigatorProvider.GetNavigatorProvider(System.Windows.UIElement)">
            <summary>
            Retreive NavigatorProvider instance associated with UI element specified.
            </summary>
            <param name="element">
            </param>
            UI element to get navigator provider for.
            <returns>
            NavigatorProvider instance associated with UI element specified.
            </returns>
        </member>
        <member name="F:Csla.Xaml.NavigatorProvider.ControlTypeNameProperty">
            <summary>
            Name of the control to show when a trigger event occurs. 
            Must be assembly qualified type name.
            </summary>
        </member>
        <member name="M:Csla.Xaml.NavigatorProvider.SetControlTypeName(System.Windows.UIElement,System.String)">
            <summary>
            Set control type for UI element
            </summary>
            <param name="element">
            UI element to set control name on.
            </param>
            <param name="value">
            Control name
            </param>
        </member>
        <member name="M:Csla.Xaml.NavigatorProvider.GetControlTypeName(System.Windows.UIElement)">
            <summary>
            Retreive control name associated with UI element specified.
            </summary>
            <param name="element">
            UI element to get control name for.
            </param>
            <returns>
            Control name
            </returns>
        </member>
        <member name="F:Csla.Xaml.NavigatorProvider.ParametersProperty">
            <summary>
            Paramters that need to be passed to navigator
            </summary>
        </member>
        <member name="M:Csla.Xaml.NavigatorProvider.GetParameters(System.Windows.UIElement)">
            <summary>
            Retreive parameters value with UI element specified.
            </summary>
            <param name="element">
            UI element to get parameters property value for.
            </param>
            <returns>
            Control name
            </returns>
        </member>
        <member name="M:Csla.Xaml.NavigatorProvider.SetParameters(System.Windows.UIElement,System.String)">
            <summary>
            Set parameters value for UI element
            </summary>
            <param name="element">
            UI element to set parameters property value for.
            </param>
            <param name="value">
            Control name
            </param>
        </member>
        <member name="F:Csla.Xaml.NavigatorProvider.TriggerEventProperty">
            <summary>
            Trigger event name.
            </summary>
        </member>
        <member name="M:Csla.Xaml.NavigatorProvider.SetTriggerEvent(System.Windows.UIElement,System.String)">
            <summary>
            Set name of the event that triggers NavigatorProvider action. for UI element
            </summary>
            <param name="element">
            UI element to set name of the event that triggers NavigatorProvider action on.
            </param>
            <param name="value">
            Event name.
            </param>
        </member>
        <member name="M:Csla.Xaml.NavigatorProvider.GetTriggerEvent(System.Windows.UIElement)">
            <summary>
            Retreive name of the event that triggers NavigatorProvider action
            associated with UI element specified.
            </summary>
            <param name="element">
            UI element to get name of the event that triggers NavigatorProvider action for.
            </param>
            <returns>
            Name of the event that triggers NavigatorProvider action.
            </returns>
        </member>
        <member name="T:Csla.Xaml.ValidatedDataGridCheckBoxColumn">
            <summary>
            Implements a checkbox column for the datagrid
            that uses PropertyStatus for validation display.
            </summary>
        </member>
        <member name="T:Csla.Xaml.ValidatedDataGridColumn">
            <summary>
            Implements a column for the datagrid
            that uses PropertyStatus for validation display.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ValidatedDataGridColumn.CreateElement">
            <summary>
            Creates the UI element.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ValidatedDataGridColumn.CreateEditingElement">
            <summary>
            Creates the UI editing element.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ValidatedDataGridColumn.GenerateEditingElement(System.Windows.Controls.DataGridCell,System.Object)">
            <summary>
            Generates the editing element.
            </summary>
            <param name="cell">Cell for content</param>
            <param name="dataItem">Data item for binding</param>
        </member>
        <member name="M:Csla.Xaml.ValidatedDataGridColumn.GenerateElement(System.Windows.Controls.DataGridCell,System.Object)">
            <summary>
            Generates the display element.
            </summary>
            <param name="cell">Cell for content</param>
            <param name="dataItem">Data item for binding</param>
        </member>
        <member name="M:Csla.Xaml.ValidatedDataGridColumn.CancelCellEdit(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Cancels edits on the cell.
            </summary>
            <param name="editingElement">Editing element</param>
            <param name="uneditedValue">Unedited value</param>
        </member>
        <member name="P:Csla.Xaml.ValidatedDataGridColumn.ElementProperty">
            <summary>
            Gets the element property value.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ValidatedDataGridColumn.EditingElementProperty">
            <summary>
            Gets the element editing property value.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ValidatedDataGridCheckBoxColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
            <summary>
            Prepares a cell for edit.
            </summary>
            <param name="editingElement">Editing element</param>
            <param name="editingEventArgs">Event args</param>
            <returns></returns>
        </member>
        <member name="M:Csla.Xaml.ValidatedDataGridCheckBoxColumn.CreateElement">
            <summary>
            Creates an element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Csla.Xaml.ValidatedDataGridCheckBoxColumn.CreateEditingElement">
            <summary>
            Creates the editing element.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Csla.Xaml.ValidatedDataGridCheckBoxColumn.ElementProperty">
            <summary>
            Gets the IsChecked property value.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ValidatedDataGridCheckBoxColumn.EditingElementProperty">
            <summary>
            Gets the IsChecked property value.
            </summary>
        </member>
        <member name="T:Csla.Xaml.ValidatedDataGridTextColumn">
            <summary>
            Implements a datagrid text column that
            uses PropertyStatus to display validation messages.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ValidatedDataGridTextColumn.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
            <summary>
            Prepares a cell for edit.
            </summary>
            <param name="editingElement">Editing element</param>
            <param name="editingEventArgs">Event args</param>
            <returns></returns>
        </member>
        <member name="M:Csla.Xaml.ValidatedDataGridTextColumn.CreateElement">
            <summary>
            Creates an element.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ValidatedDataGridTextColumn.CreateEditingElement">
            <summary>
            Creates the editing element.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ValidatedDataGridTextColumn.ElementProperty">
            <summary>
            Gets the Text property value.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ValidatedDataGridTextColumn.EditingElementProperty">
            <summary>
            Gets the Text property value.
            </summary>
        </member>
        <member name="T:Csla.Xaml.VisualTree">
            <summary>
            Contains methods to help work with the visual tree.
            </summary>
        </member>
        <member name="M:Csla.Xaml.VisualTree.FindParent(System.String,System.Windows.DependencyObject)">
            <summary>
            Finds the parent of an object.
            </summary>
            <param name="path">Path</param>
            <param name="current">Current object</param>
        </member>
        <member name="M:Csla.Xaml.VisualTree.FindByName(System.String,System.Windows.DependencyObject)">
            <summary>
            Finds an element by name.
            </summary>
            <param name="name">Name of the element</param>
            <param name="parent">Parent object</param>
        </member>
    </members>
</doc>
