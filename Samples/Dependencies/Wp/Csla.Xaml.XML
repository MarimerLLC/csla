<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Csla.Xaml</name>
    </assembly>
    <members>
        <member name="T:Csla.Xaml.ViewModel`1">
            <summary>
            Base class used to create ViewModel objects,
            with pre-existing verbs for use by
            InvokeMethod or Invoke.
            </summary>
            <typeparam name="T">Type of the Model object.</typeparam>
        </member>
        <member name="T:Csla.Xaml.ViewModelBase`1">
            <summary>
            Base class used to create ViewModel objects that
            implement their own commands/verbs/actions.
            </summary>
            <typeparam name="T">Type of the Model object.</typeparam>
        </member>
        <member name="T:Csla.Xaml.IViewModel">
            <summary>
            Defines a CSLA .NET viewmodel
            object.
            </summary>
        </member>
        <member name="P:Csla.Xaml.IViewModel.Model">
            <summary>
            Gets or sets the Model property
            of the viewmodel object.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.#ctor">
            <summary>
            Create new instance of base class used to create ViewModel objects that
            implement their own commands/verbs/actions.
            </summary>
        </member>
        <member name="F:Csla.Xaml.ViewModelBase`1.ModelProperty">
            <summary>
            Gets or sets the Model object.
            </summary>
        </member>
        <member name="F:Csla.Xaml.ViewModelBase`1.ManageObjectLifetimeProperty">
            <summary>
            Gets or sets a value indicating whether the
            ViewModel should automatically managed the
            lifetime of the Model.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnError(System.Exception)">
            <summary>
            Raises ErrorOccurred event when an error occurs
            during processing.
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.SetPropertiesAtObjectLevel">
            <summary>
            This method is only called from constuctor to set default values immediately.
            Sets the properties at object level.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.BeginRefresh(System.Action{System.EventHandler{Csla.DataPortalResult{`0}}})">
            <summary>
            Creates or retrieves a new instance of the 
            Model by invoking a static factory method.
            </summary>
            <param name="factoryMethod">Static factory method action.</param>
            <example>BeginRefresh(BusinessList.BeginGetList)</example>
            <example>BeginRefresh(handler => BusinessList.BeginGetList(handler))</example>
            <example>BeginRefresh(handler => BusinessList.BeginGetList(id, handler))</example>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.BeginRefresh(System.String,System.Object[])">
            <summary>
            Creates or retrieves a new instance of the 
            Model by invoking a static factory method.
            </summary>
            <param name="factoryMethod">Name of the static factory method.</param>
            <param name="factoryParameters">Factory method parameters.</param>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.BeginRefresh(System.String)">
            <summary>
            Creates or retrieves a new instance of the 
            Model by invoking a static factory method.
            </summary>
            <param name="factoryMethod">Name of the static factory method.</param>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnRefreshing(`0)">
            <summary>
            Method called after a refresh operation 
            has completed and before the model is updated 
            (when successful).
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnRefreshed">
            <summary>
            Method called after a refresh operation 
            has completed (whether successful or
            not).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.BeginSave">
            <summary>
            Saves the Model, first committing changes
            if ManagedObjectLifetime is true.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnSaving(`0)">
            <summary>
            Method called after a save operation 
            has completed and before Model is updated 
            (when successful).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnSaved">
            <summary>
            Method called after a save operation 
            has completed (whether successful or
            not).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.DoCancel">
            <summary>
            Cancels changes made to the model 
            if ManagedObjectLifetime is true.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.BeginAddNew">
            <summary>
            Adds a new item to the Model (if it
            is a collection).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.DoRemove(System.Object)">
            <summary>
            Removes an item from the Model (if it
            is a collection).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.DoDelete">
            <summary>
            Marks the Model for deletion (if it is an
            editable root object).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnPropertyChanged(System.String)">
            <summary>
            Raise the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of the changed property.</param>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnModelChanged(`0,`0)">
            <summary>
            Invoked when the Model changes, allowing
            event handlers to be unhooked from the old
            object and hooked on the new object.
            </summary>
            <param name="oldValue">Previous Model reference.</param>
            <param name="newValue">New Model reference.</param>
        </member>
        <member name="M:Csla.Xaml.ViewModelBase`1.OnSetProperties">
            <summary>
            Override this method to hook into to logic of setting properties when model is changed or edited. 
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.Model">
            <summary>
            Gets or sets the Model object.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.ManageObjectLifetime">
            <summary>
            Gets or sets a value indicating whether the
            ViewManageObjectLifetime should automatically managed the
            lifetime of the ManageObjectLifetime.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.Error">
            <summary>
            Gets the Error object corresponding to the
            last asyncronous operation.
            </summary>
        </member>
        <member name="E:Csla.Xaml.ViewModelBase`1.ErrorOccurred">
            <summary>
            Event raised when an error occurs during processing.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.IsBusy">
            <summary>
            Gets a value indicating whether this object is
            executing an asynchronous process.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanSave">
            <summary>
            Gets a value indicating whether the Model
            can currently be saved.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanCancel">
            <summary>
            Gets a value indicating whether the Model
            can currently be canceled.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanCreate">
            <summary>
            Gets a value indicating whether an instance
            of the Model
            can currently be created.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanDelete">
            <summary>
            Gets a value indicating whether the Model
            can currently be deleted.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanFetch">
            <summary>
            Gets a value indicating whether an instance
            of the Model
            can currently be retrieved.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanRemove">
            <summary>
            Gets a value indicating whether the Model
            can currently be removed.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanAddNew">
            <summary>
            Gets a value indicating whether the Model
            can currently be added.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanCreateObject">
            <summary>
            Gets a value indicating whether the current
            user is authorized to create a Model.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanGetObject">
            <summary>
            Gets a value indicating whether the current
            user is authorized to retrieve a Model.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanEditObject">
            <summary>
            Gets a value indicating whether the current
            user is authorized to save (insert or update
            a Model.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ViewModelBase`1.CanDeleteObject">
            <summary>
            Gets a value indicating whether the current
            user is authorized to delete
            a Model.
            </summary>
        </member>
        <member name="E:Csla.Xaml.ViewModelBase`1.PropertyChanged">
            <summary>
            Event raised when a property changes.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModel`1.Save(System.Object,Csla.Xaml.ExecuteEventArgs)">
            <summary>
            Saves the Model, first committing changes
            if ManagedObjectLifetime is true.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModel`1.Cancel(System.Object,Csla.Xaml.ExecuteEventArgs)">
            <summary>
            Cancels changes made to the model 
            if ManagedObjectLifetime is true.
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModel`1.AddNew(System.Object,Csla.Xaml.ExecuteEventArgs)">
            <summary>
            Adds a new item to the Model (if it
            is a collection).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModel`1.Remove(System.Object,Csla.Xaml.ExecuteEventArgs)">
            <summary>
            Removes an item from the Model (if it
            is a collection).
            </summary>
        </member>
        <member name="M:Csla.Xaml.ViewModel`1.Delete(System.Object,Csla.Xaml.ExecuteEventArgs)">
            <summary>
            Marks the Model for deletion (if it is an
            editable root object).
            </summary>
        </member>
        <member name="T:Csla.Xaml.ErrorEventArgs">
            <summary>
            Contains information about the error that
            has occurred.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ErrorEventArgs.Error">
            <summary>
            Gets the Exception object for the error
            that occurred.
            </summary>
        </member>
        <member name="T:Csla.Xaml.TriggerAction">
            <summary>
            Control used to invoke a method on the DataContext
            based on an event being raised by a UI control.
            </summary>
        </member>
        <member name="M:Csla.Xaml.TriggerAction.#ctor">
            <summary>
            Creates an instance of the object.
            </summary>
        </member>
        <member name="M:Csla.Xaml.TriggerAction.CallMethod(System.Object,System.EventArgs)">
            <summary>
            Invokes target method.
            </summary>
        </member>
        <member name="F:Csla.Xaml.TriggerAction.TargetControlProperty">
            <summary>
            Gets or sets the target UI control.
            </summary>
        </member>
        <member name="F:Csla.Xaml.TriggerAction.TriggerEventProperty">
            <summary>
            Gets or sets the name of the event
            that will trigger the action.
            </summary>
        </member>
        <member name="F:Csla.Xaml.TriggerAction.MethodNameProperty">
            <summary>
            Gets or sets the name of the method
            to be invoked.
            </summary>
        </member>
        <member name="F:Csla.Xaml.TriggerAction.MethodParameterProperty">
            <summary>
            Gets or sets the value of a parameter to
            be passed to the invoked method.
            </summary>
        </member>
        <member name="F:Csla.Xaml.TriggerAction.RebindParameterDynamicallyProperty">
            <summary>
            Gets or sets a value indicating whether the
            MethodParameter value should be dynamically rebound
            before invoking the target method.
            </summary>
        </member>
        <member name="P:Csla.Xaml.TriggerAction.TargetControl">
            <summary>
            Gets or sets the target UI control.
            </summary>
        </member>
        <member name="P:Csla.Xaml.TriggerAction.TriggerEvent">
            <summary>
            Gets or sets the name of the event
            that will trigger the action.
            </summary>
        </member>
        <member name="P:Csla.Xaml.TriggerAction.MethodName">
            <summary>
            Gets or sets the name of the method
            to be invoked.
            </summary>
        </member>
        <member name="P:Csla.Xaml.TriggerAction.MethodParameter">
            <summary>
            Gets or sets the value of a parameter to
            be passed to the invoked method.
            </summary>
        </member>
        <member name="P:Csla.Xaml.TriggerAction.RebindParameterDynamically">
            <summary>
            Gets or sets a value indicating whether the
            MethodParameter value should be dynamically rebound
            before invoking the target method.
            </summary>
        </member>
        <member name="T:Csla.Xaml.PropertyInfo">
            <summary>
            Expose metastate information about a property.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.#ctor">
            <summary>
            Creates an instance of the object.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.#ctor(System.Boolean)">
            <summary>
            Creates an instance of the object for testing.
            </summary>
            <param name="testing">Test mode parameter.</param>
        </member>
        <member name="F:Csla.Xaml.PropertyInfo.BrokenRulesProperty">
            <summary>
            Gets the broken rules collection from the
            business object.
            </summary>
        </member>
        <member name="F:Csla.Xaml.PropertyInfo.MyDataContextProperty">
            <summary>
            Used to monitor for changes in the binding path.
            </summary>
        </member>
        <member name="F:Csla.Xaml.PropertyInfo.PropertyProperty">
            <summary>
            Gets or sets the source business
            property to which this control is bound.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.ParseRelativeBinding(System.Windows.Data.BindingExpression)">
            <summary>
            Checks a binding expression to see if it is a relative source binding used in a control template.
            </summary>
            <param name="sourceBinding">The binding expression to parse.</param>
            <returns>If the source binding is a relative source binding, this method 
            finds the proper dependency property on the parent control and returns
            the binding expression for that property.</returns>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.SetSource(System.Boolean)">
            <summary>
            Sets the source binding and updates status.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.SetSource(System.Object)">
            <summary>
            Sets the source binding and updates status.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.SetBindingValues(System.Windows.Data.BindingExpression)">
            <summary>
            Sets the binding values for this instance.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.GetRealSource(System.Object,System.String)">
            <summary>
            Gets the real source helper method.
            </summary>
            <param name="source">The source.</param>
            <param name="bindingPath">The binding path.</param>
            <returns></returns>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.GetRelativePath(System.Object,System.String)">
            <summary>
            Gets the part of the binding path relevant to the given source.
            </summary>
            <param name="source">The source.</param>
            <param name="bindingPath">The binding path.</param>
            <returns></returns>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.UpdateState">
            <summary>
            Updates the state on control Property.
            </summary>
        </member>
        <member name="M:Csla.Xaml.PropertyInfo.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of the changed property.</param>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.BrokenRules">
            <summary>
            Gets the broken rules collection from the
            business object.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.Property">
            <summary>
            Gets or sets the source business
            property to which this control is bound.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.Source">
            <summary>
            Gets or sets the Source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.BindingPath">
            <summary>
            Gets or sets the binding path.
            </summary>
            <value>The binding path.</value>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.CanRead">
            <summary>
            Gets a value indicating whether the user
            is authorized to read the property.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.CanWrite">
            <summary>
            Gets a value indicating whether the user
            is authorized to write the property.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.IsBusy">
            <summary>
            Gets a value indicating whether the property
            is busy with an asynchronous operation.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.IsValid">
            <summary>
            Gets a value indicating whether the 
            property is valid.
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.RuleSeverity">
            <summary>
            Gets a valud indicating the worst
            severity of all broken rules
            for this property (if IsValid is
            false).
            </summary>
        </member>
        <member name="P:Csla.Xaml.PropertyInfo.RuleDescription">
            <summary>
            Gets the description of the most severe
            broken rule for this property.
            </summary>
        </member>
        <member name="E:Csla.Xaml.PropertyInfo.PropertyChanged">
            <summary>
            Event raised when a property has changed.
            </summary>
        </member>
        <member name="T:Csla.Xaml.ExecuteEventArgs">
            <summary>
            Arguments passed to a method invoked
            by the Execute trigger action.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ExecuteEventArgs.TriggerSource">
            <summary>
            The control that raised the event that
            triggered invocation of this method.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ExecuteEventArgs.MethodParameter">
            <summary>
            The MethodParameter value provided by
            the designer.
            </summary>
        </member>
        <member name="P:Csla.Xaml.ExecuteEventArgs.TriggerParameter">
            <summary>
            The EventArgs parameter from the event
            that triggered invocation of this method.
            </summary>
        </member>
    </members>
</doc>
