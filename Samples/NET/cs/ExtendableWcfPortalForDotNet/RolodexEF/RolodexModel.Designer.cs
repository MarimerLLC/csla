//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RolodexModel", "FK_CompanyContacts_Companies", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RolodexEF.Companies), "CompanyContacts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RolodexEF.CompanyContacts))]
[assembly: EdmRelationshipAttribute("RolodexModel", "FK_CompanyContactPhones_CompanyContacts", "CompanyContacts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RolodexEF.CompanyContacts), "CompanyContactPhones", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RolodexEF.CompanyContactPhones))]
[assembly: EdmRelationshipAttribute("RolodexModel", "FK_CompanyContacts_Ranks", "Ranks", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(RolodexEF.Ranks), "CompanyContacts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RolodexEF.CompanyContacts))]

#endregion

namespace RolodexEF
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RolodexEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RolodexEntities object using the connection string found in the 'RolodexEntities' section of the application configuration file.
        /// </summary>
        public RolodexEntities() : base("name=RolodexEntities", "RolodexEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RolodexEntities object.
        /// </summary>
        public RolodexEntities(string connectionString) : base(connectionString, "RolodexEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RolodexEntities object.
        /// </summary>
        public RolodexEntities(EntityConnection connection) : base(connection, "RolodexEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Companies> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Companies>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Companies> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyContactPhones> CompanyContactPhones
        {
            get
            {
                if ((_CompanyContactPhones == null))
                {
                    _CompanyContactPhones = base.CreateObjectSet<CompanyContactPhones>("CompanyContactPhones");
                }
                return _CompanyContactPhones;
            }
        }
        private ObjectSet<CompanyContactPhones> _CompanyContactPhones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyContacts> CompanyContacts
        {
            get
            {
                if ((_CompanyContacts == null))
                {
                    _CompanyContacts = base.CreateObjectSet<CompanyContacts>("CompanyContacts");
                }
                return _CompanyContacts;
            }
        }
        private ObjectSet<CompanyContacts> _CompanyContacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ranks> Ranks
        {
            get
            {
                if ((_Ranks == null))
                {
                    _Ranks = base.CreateObjectSet<Ranks>("Ranks");
                }
                return _Ranks;
            }
        }
        private ObjectSet<Ranks> _Ranks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Companies companies)
        {
            base.AddObject("Companies", companies);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyContactPhones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyContactPhones(CompanyContactPhones companyContactPhones)
        {
            base.AddObject("CompanyContactPhones", companyContactPhones);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyContacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyContacts(CompanyContacts companyContacts)
        {
            base.AddObject("CompanyContacts", companyContacts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ranks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRanks(Ranks ranks)
        {
            base.AddObject("Ranks", ranks);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RolodexModel", Name="Companies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Companies : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Companies object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="companyName">Initial value of the CompanyName property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        public static Companies CreateCompanies(global::System.Int32 companyId, global::System.String companyName, global::System.DateTime dateAdded)
        {
            Companies companies = new Companies();
            companies.CompanyId = companyId;
            companies.CompanyName = companyName;
            companies.DateAdded = dateAdded;
            return companies;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value, "DateAdded");
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RolodexModel", "FK_CompanyContacts_Companies", "CompanyContacts")]
        public EntityCollection<CompanyContacts> CompanyContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyContacts>("RolodexModel.FK_CompanyContacts_Companies", "CompanyContacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyContacts>("RolodexModel.FK_CompanyContacts_Companies", "CompanyContacts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RolodexModel", Name="CompanyContactPhones")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyContactPhones : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyContactPhones object.
        /// </summary>
        /// <param name="companyContactPhoneId">Initial value of the CompanyContactPhoneId property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        /// <param name="faxNumber">Initial value of the FaxNumber property.</param>
        public static CompanyContactPhones CreateCompanyContactPhones(global::System.Int32 companyContactPhoneId, global::System.String phoneNumber, global::System.String faxNumber)
        {
            CompanyContactPhones companyContactPhones = new CompanyContactPhones();
            companyContactPhones.CompanyContactPhoneId = companyContactPhoneId;
            companyContactPhones.PhoneNumber = phoneNumber;
            companyContactPhones.FaxNumber = faxNumber;
            return companyContactPhones;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyContactPhoneId
        {
            get
            {
                return _CompanyContactPhoneId;
            }
            set
            {
                if (_CompanyContactPhoneId != value)
                {
                    OnCompanyContactPhoneIdChanging(value);
                    ReportPropertyChanging("CompanyContactPhoneId");
                    _CompanyContactPhoneId = StructuralObject.SetValidValue(value, "CompanyContactPhoneId");
                    ReportPropertyChanged("CompanyContactPhoneId");
                    OnCompanyContactPhoneIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyContactPhoneId;
        partial void OnCompanyContactPhoneIdChanging(global::System.Int32 value);
        partial void OnCompanyContactPhoneIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false, "PhoneNumber");
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FaxNumber
        {
            get
            {
                return _FaxNumber;
            }
            set
            {
                OnFaxNumberChanging(value);
                ReportPropertyChanging("FaxNumber");
                _FaxNumber = StructuralObject.SetValidValue(value, false, "FaxNumber");
                ReportPropertyChanged("FaxNumber");
                OnFaxNumberChanged();
            }
        }
        private global::System.String _FaxNumber;
        partial void OnFaxNumberChanging(global::System.String value);
        partial void OnFaxNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RolodexModel", "FK_CompanyContactPhones_CompanyContacts", "CompanyContacts")]
        public CompanyContacts CompanyContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyContacts>("RolodexModel.FK_CompanyContactPhones_CompanyContacts", "CompanyContacts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyContacts>("RolodexModel.FK_CompanyContactPhones_CompanyContacts", "CompanyContacts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyContacts> CompanyContactsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyContacts>("RolodexModel.FK_CompanyContactPhones_CompanyContacts", "CompanyContacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyContacts>("RolodexModel.FK_CompanyContactPhones_CompanyContacts", "CompanyContacts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RolodexModel", Name="CompanyContacts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyContacts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyContacts object.
        /// </summary>
        /// <param name="companyContactId">Initial value of the CompanyContactId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="baseSalary">Initial value of the BaseSalary property.</param>
        public static CompanyContacts CreateCompanyContacts(global::System.Int32 companyContactId, global::System.String firstName, global::System.String lastName, global::System.Decimal baseSalary)
        {
            CompanyContacts companyContacts = new CompanyContacts();
            companyContacts.CompanyContactId = companyContactId;
            companyContacts.FirstName = firstName;
            companyContacts.LastName = lastName;
            companyContacts.BaseSalary = baseSalary;
            return companyContacts;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyContactId
        {
            get
            {
                return _CompanyContactId;
            }
            set
            {
                if (_CompanyContactId != value)
                {
                    OnCompanyContactIdChanging(value);
                    ReportPropertyChanging("CompanyContactId");
                    _CompanyContactId = StructuralObject.SetValidValue(value, "CompanyContactId");
                    ReportPropertyChanged("CompanyContactId");
                    OnCompanyContactIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyContactId;
        partial void OnCompanyContactIdChanging(global::System.Int32 value);
        partial void OnCompanyContactIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value, "Birthday");
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal BaseSalary
        {
            get
            {
                return _BaseSalary;
            }
            set
            {
                OnBaseSalaryChanging(value);
                ReportPropertyChanging("BaseSalary");
                _BaseSalary = StructuralObject.SetValidValue(value, "BaseSalary");
                ReportPropertyChanged("BaseSalary");
                OnBaseSalaryChanged();
            }
        }
        private global::System.Decimal _BaseSalary;
        partial void OnBaseSalaryChanging(global::System.Decimal value);
        partial void OnBaseSalaryChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RolodexModel", "FK_CompanyContacts_Companies", "Companies")]
        public Companies Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("RolodexModel.FK_CompanyContacts_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("RolodexModel.FK_CompanyContacts_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Companies> CompaniesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Companies>("RolodexModel.FK_CompanyContacts_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Companies>("RolodexModel.FK_CompanyContacts_Companies", "Companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RolodexModel", "FK_CompanyContactPhones_CompanyContacts", "CompanyContactPhones")]
        public EntityCollection<CompanyContactPhones> CompanyContactPhones
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyContactPhones>("RolodexModel.FK_CompanyContactPhones_CompanyContacts", "CompanyContactPhones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyContactPhones>("RolodexModel.FK_CompanyContactPhones_CompanyContacts", "CompanyContactPhones", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RolodexModel", "FK_CompanyContacts_Ranks", "Ranks")]
        public Ranks Ranks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ranks>("RolodexModel.FK_CompanyContacts_Ranks", "Ranks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ranks>("RolodexModel.FK_CompanyContacts_Ranks", "Ranks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ranks> RanksReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ranks>("RolodexModel.FK_CompanyContacts_Ranks", "Ranks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ranks>("RolodexModel.FK_CompanyContacts_Ranks", "Ranks", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RolodexModel", Name="Ranks")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ranks : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ranks object.
        /// </summary>
        /// <param name="rankId">Initial value of the RankId property.</param>
        /// <param name="rank">Initial value of the Rank property.</param>
        public static Ranks CreateRanks(global::System.Int32 rankId, global::System.String rank)
        {
            Ranks ranks = new Ranks();
            ranks.RankId = rankId;
            ranks.Rank = rank;
            return ranks;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                if (_RankId != value)
                {
                    OnRankIdChanging(value);
                    ReportPropertyChanging("RankId");
                    _RankId = StructuralObject.SetValidValue(value, "RankId");
                    ReportPropertyChanged("RankId");
                    OnRankIdChanged();
                }
            }
        }
        private global::System.Int32 _RankId;
        partial void OnRankIdChanging(global::System.Int32 value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Rank
        {
            get
            {
                return _Rank;
            }
            set
            {
                OnRankChanging(value);
                ReportPropertyChanging("Rank");
                _Rank = StructuralObject.SetValidValue(value, false, "Rank");
                ReportPropertyChanged("Rank");
                OnRankChanged();
            }
        }
        private global::System.String _Rank;
        partial void OnRankChanging(global::System.String value);
        partial void OnRankChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RolodexModel", "FK_CompanyContacts_Ranks", "CompanyContacts")]
        public EntityCollection<CompanyContacts> CompanyContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompanyContacts>("RolodexModel.FK_CompanyContacts_Ranks", "CompanyContacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompanyContacts>("RolodexModel.FK_CompanyContacts_Ranks", "CompanyContacts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RolodexModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        public static Users CreateUsers(global::System.Int32 userId, global::System.String userName, global::System.String password, global::System.String role)
        {
            Users users = new Users();
            users.UserId = userId;
            users.UserName = userName;
            users.Password = password;
            users.Role = role;
            return users;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, false, "Role");
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();

        #endregion

    }

    #endregion

}
