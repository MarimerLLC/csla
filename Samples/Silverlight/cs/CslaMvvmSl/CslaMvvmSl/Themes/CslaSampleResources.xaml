<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk" 
  xmlns:System="clr-namespace:System;assembly=mscorlib"
  xmlns:csla="clr-namespace:Csla.Xaml;assembly=Csla.Xaml"
  xmlns:cslaRules="clr-namespace:Csla.Rules;assembly=Csla"
  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
  xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
  mc:Ignorable="d">

  <Color x:Key="LightColor">#FFFFFFFF</Color>
  <Color x:Key="DarkColor">#FF212B40</Color>
  <Color x:Key="AccentColor">#FF90B41F</Color>

  <SolidColorBrush x:Key="LightColorBrush" Color="{StaticResource LightColor}" />
  <SolidColorBrush x:Key="DarkColorBrush" Color="{StaticResource DarkColor}" />
  <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}" />

  <SolidColorBrush x:Key="ValidationBrush_Error" Color="#FFDC000C"/>
  <SolidColorBrush x:Key="ValidationBrush_Warning" Color="#FFEBF900"/>
  <SolidColorBrush x:Key="ValidationBrush_Info" Color="#FF0000FF"/>

  <Style x:Key="ApplicationTitleTextStyle" TargetType="TextBlock">
    <Setter Property="FontSize" Value="48"/>
    <Setter Property="FontFamily" Value="Segoe WP Light"/>
    <Setter Property="Margin" Value="10,0,0,0"/>
    <Setter Property="Foreground" Value="#FFFFFFFF"/>
  </Style>

  <Style x:Key="LabelTextStyle" TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource DarkColorBrush}" />
    <Setter Property="FontSize" Value="18.667" />
    <Setter Property="Margin" Value="10,0,10,0"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="FontFamily" Value="Segoe WP"/>
  </Style>

  <Style x:Key="SubHeadingTextStyle" TargetType="TextBlock">
    <Setter Property="Margin" Value="0,15,0,0"/>
    <Setter Property="FontFamily" Value="Segoe WP"/>
    <Setter Property="FontSize" Value="32"/>
    <Setter Property="Foreground" Value="{StaticResource DarkColorBrush}"/>
  </Style>

  <Style x:Key="ButtonTextStyle" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="Segoe WP Light"/>
    <Setter Property="FontSize" Value="22"/>
  </Style>

  <Style x:Key="HyperLinkStyle" TargetType="HyperlinkButton">
    <Setter Property="FontSize" Value="18.667" />
    <Setter Property="Foreground" Value="{StaticResource DarkColorBrush}" />
    <Setter Property="Width" Value="Auto" />
    <Setter Property="Margin" Value="10,3,10,3" />
    <Setter Property="HorizontalAlignment" Value="Left" />
  </Style>

  <DataTemplate x:Key="CslaButtonContentTemplate">
    <TextBlock Text="{Binding}" Style="{StaticResource ButtonTextStyle}" />
  </DataTemplate>

  <ControlTemplate x:Key="ButtonTemplate" TargetType="Button">
    <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
      <Grid.RenderTransform>
        <CompositeTransform/>
      </Grid.RenderTransform>

      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualStateGroup.Transitions>
            <VisualTransition GeneratedDuration="0:0:0.2" To="Pressed">
              <VisualTransition.GeneratedEasingFunction>
                <BounceEase EasingMode="EaseOut"/>
              </VisualTransition.GeneratedEasingFunction>
            </VisualTransition>
            <VisualTransition From="Pressed" GeneratedDuration="0:0:0.5">
              <VisualTransition.GeneratedEasingFunction>
                <BounceEase EasingMode="EaseOut"/>
              </VisualTransition.GeneratedEasingFunction>
            </VisualTransition>
          </VisualStateGroup.Transitions>
          <VisualState x:Name="Normal"/>
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Cursor" Storyboard.TargetName="Background">
                <DiscreteObjectKeyFrame KeyTime="0" Value="Hand" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Cursor" Storyboard.TargetName="contentPresenter">
                <DiscreteObjectKeyFrame KeyTime="0" Value="Hand" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <DoubleAnimation Duration="0" To="-5" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Focused">
            <Storyboard>
              <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Unfocused"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>

      <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF252525" Opacity="0" />
      <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
      <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="0" RadiusY="0" RadiusX="0" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 5" StrokeDashOffset="1" StrokeDashCap="Round" Opacity="0"/>
    </Grid>
  </ControlTemplate>

  <Style x:Key="CslaButtonStyle" TargetType="Button">
    <Setter Property="Background" Value="{StaticResource DarkColorBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource DarkColorBrush}"/>
    <Setter Property="Padding" Value="15,1,15,4"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="MinWidth" Value="75" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="ContentTemplate" Value="{StaticResource CslaButtonContentTemplate}" />
    <Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
  </Style>

  <ControlTemplate x:Key="ValidationToolTipTemplate">
    <Grid x:Name="Root" Margin="0" RenderTransformOrigin="0,0" Opacity="0">
      <Grid.RenderTransform>
        <TranslateTransform x:Name="yform" Y="-25"/>
      </Grid.RenderTransform>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="OpenStates">
          <VisualStateGroup.Transitions>
            <VisualTransition GeneratedDuration="0"/>
            <VisualTransition To="Open" GeneratedDuration="0:0:0.2">
              <Storyboard>
                <DoubleAnimation Storyboard.TargetName="yform" Storyboard.TargetProperty="Y" To="0" Duration="0:0:0.2">
                  <DoubleAnimation.EasingFunction>
                    <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                  </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
              </Storyboard>
            </VisualTransition>
          </VisualStateGroup.Transitions>
          <VisualState x:Name="Closed">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Open">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="yform" Storyboard.TargetProperty="Y" To="0" Duration="0"/>
              <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>

      <Border Background="{TemplateBinding Background}" CornerRadius="0"/>
      <Border CornerRadius="0">
        <TextBlock 
  					UseLayoutRounding="false" 
  					Foreground="{TemplateBinding Foreground}" Margin="8,4,8,4" MaxWidth="250" TextWrapping="Wrap" Text="{Binding Path=RuleDescription}"/>
      </Border>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="TextBoxTemplate" TargetType="TextBox">
    <Grid x:Name="RootElement">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal"/>
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF99C1E2" Duration="0"/>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="ReadOnly">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Focused">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Unfocused">
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="ValidationStates">
          <VisualState x:Name="Valid"/>
          <VisualState x:Name="InvalidUnfocused">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <Visibility>Visible</Visibility>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="InvalidFocused">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <Visibility>Visible</Visibility>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <System:Boolean>True</System:Boolean>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="BusyStates">
          <VisualState x:Name="Idle"/>
          <VisualState x:Name="Busy">
            <Storyboard>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BusyElement" RepeatBehavior="Forever">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                  <EasingDoubleKeyFrame.EasingFunction>
                    <QuinticEase EasingMode="EaseIn"/>
                  </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>

      <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
        <Grid>
          <Border x:Name="ReadOnlyVisualElement" Opacity="0" Background="#5EC9C9C9"/>
          <Border x:Name="MouseOverBorder" BorderThickness="1" BorderBrush="Transparent">
            <ScrollViewer x:Name="ContentElement" Padding="{TemplateBinding Padding}" BorderThickness="0" IsTabStop="False"/>
          </Border>
        </Grid>
      </Border>
      <Border x:Name="DisabledVisualElement" Background="#A5F7F7F7" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" IsHitTestVisible="False"/>
      <Border x:Name="FocusVisualElement" BorderBrush="#FF212B40" BorderThickness="{TemplateBinding BorderThickness}" Margin="0" Opacity="0" IsHitTestVisible="False"/>
      <Border x:Name="ValidationErrorElement" BorderThickness="1" CornerRadius="0" BorderBrush="{StaticResource ValidationBrush_Error}" Visibility="Collapsed">
        <ToolTipService.ToolTip>
          <ToolTip x:Name="validationTooltip" Template="{StaticResource ValidationToolTipTemplate}" Placement="Bottom" 
  						       PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                     Background="{StaticResource ValidationBrush_Error}" Foreground="White"
  						       DataContext="{Binding ElementName=pi}">
            <ToolTip.Triggers>
              <EventTrigger RoutedEvent="Canvas.Loaded">
                <BeginStoryboard>
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <System:Boolean>true</System:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger>
            </ToolTip.Triggers>
          </ToolTip>
        </ToolTipService.ToolTip>
        <Grid Width="12" Height="12" HorizontalAlignment="Right" Margin="1,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
          <Path Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" x:Name="ValidationErrorElement_Path" Fill="{StaticResource ValidationBrush_Error}"/>
          <Path Margin="1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff"/>
        </Grid>
      </Border>
      <Rectangle x:Name="BusyElement" Fill="#FF7A7A7A" HorizontalAlignment="Right" Width="12" Height="12" VerticalAlignment="Center" Margin="5,5,10,5" Opacity="0"/>

      <csla:PropertyInfo Property="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text}" x:Name="pi">
        <i:Interaction.Triggers>
          <ei:DataTrigger Binding="{Binding Path=RuleSeverity, ElementName=pi}">
            <ei:DataTrigger.Value>
              <cslaRules:RuleSeverity>Error</cslaRules:RuleSeverity>
            </ei:DataTrigger.Value>
            <ei:ChangePropertyAction TargetName="validationTooltip" 
                                     PropertyName="Foreground" 
                                     Value="White" />
            <ei:ChangePropertyAction TargetName="validationTooltip" 
                                     PropertyName="Background" 
                                     Value="{StaticResource ValidationBrush_Error}" />
            <ei:ChangePropertyAction TargetName="ValidationErrorElement" 
                                     PropertyName="BorderBrush" 
                                     Value="{StaticResource ValidationBrush_Error}" />
            <ei:ChangePropertyAction TargetName="ValidationErrorElement_Path" 
                                     PropertyName="Fill" 
                                     Value="{StaticResource ValidationBrush_Error}" />
          </ei:DataTrigger>

          <ei:DataTrigger Binding="{Binding Path=RuleSeverity, ElementName=pi}">
            <ei:DataTrigger.Value>
              <cslaRules:RuleSeverity>Warning</cslaRules:RuleSeverity>
            </ei:DataTrigger.Value>
            <ei:ChangePropertyAction TargetName="validationTooltip" 
                                     PropertyName="Foreground" 
                                     Value="Black" />
            <ei:ChangePropertyAction TargetName="validationTooltip" 
                                     PropertyName="Background" 
                                     Value="{StaticResource ValidationBrush_Warning}" />
            <ei:ChangePropertyAction TargetName="ValidationErrorElement" 
                                     PropertyName="BorderBrush" 
                                     Value="{StaticResource ValidationBrush_Warning}" />
            <ei:ChangePropertyAction TargetName="ValidationErrorElement_Path" 
                                     PropertyName="Fill" 
                                     Value="{StaticResource ValidationBrush_Warning}" />
          </ei:DataTrigger>

          <ei:DataTrigger Binding="{Binding Path=RuleSeverity, ElementName=pi}">
            <ei:DataTrigger.Value>
              <cslaRules:RuleSeverity>Information</cslaRules:RuleSeverity>
            </ei:DataTrigger.Value>
            <ei:ChangePropertyAction TargetName="validationTooltip" 
                                     PropertyName="Foreground" 
                                     Value="White" />
            <ei:ChangePropertyAction TargetName="validationTooltip" 
                                     PropertyName="Background" 
                                     Value="{StaticResource ValidationBrush_Info}" />
            <ei:ChangePropertyAction TargetName="ValidationErrorElement" 
                                     PropertyName="BorderBrush" 
                                     Value="{StaticResource ValidationBrush_Info}" />
            <ei:ChangePropertyAction TargetName="ValidationErrorElement_Path" 
                                     PropertyName="Fill" 
                                     Value="{StaticResource ValidationBrush_Info}" />
          </ei:DataTrigger>

          <i:EventTrigger SourceObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" EventName="GotFocus">
            <i:Interaction.Behaviors>
              <ei:ConditionBehavior>
                <ei:ConditionalExpression>
                  <ei:ComparisonCondition LeftOperand="{Binding IsValid, ElementName=pi}" RightOperand="False"/>
                </ei:ConditionalExpression>
              </ei:ConditionBehavior>
            </i:Interaction.Behaviors>
            <ei:GoToStateAction StateName="InvalidFocused"/>
          </i:EventTrigger>
          <i:EventTrigger SourceObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" EventName="LostFocus">
            <i:Interaction.Behaviors>
              <ei:ConditionBehavior>
                <ei:ConditionalExpression>
                  <ei:ComparisonCondition LeftOperand="{Binding IsValid, ElementName=pi}" RightOperand="False"/>
                </ei:ConditionalExpression>
              </ei:ConditionBehavior>
            </i:Interaction.Behaviors>
            <ei:GoToStateAction StateName="InvalidUnfocused"/>
          </i:EventTrigger>
          <ei:DataTrigger Binding="{Binding IsValid, ElementName=pi}" Value="False">
            <ei:GoToStateAction StateName="InvalidUnfocused"/>
          </ei:DataTrigger>
          <ei:DataTrigger Binding="{Binding IsValid, ElementName=pi}" Value="True">
            <ei:GoToStateAction StateName="Valid"/>
          </ei:DataTrigger>

          <ei:DataTrigger Binding="{Binding IsBusy, ElementName=pi}" Value="True">
            <ei:GoToStateAction StateName="Busy"/>
          </ei:DataTrigger>
          <ei:DataTrigger Binding="{Binding IsBusy, ElementName=pi}" Value="False">
            <ei:GoToStateAction StateName="Idle"/>
          </ei:DataTrigger>

          <ei:DataTrigger Binding="{Binding CanRead, ElementName=pi}" Value="False">
            <ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                       PropertyName="Visibility" Value="Collapsed" />
          </ei:DataTrigger>
          <ei:DataTrigger Binding="{Binding CanWrite, ElementName=pi}" Value="False">
            <ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                       PropertyName="IsReadOnly" Value="True" />
          </ei:DataTrigger>
        </i:Interaction.Triggers>
      </csla:PropertyInfo>

    </Grid>
  </ControlTemplate>

  <Style x:Key="TextBoxStyle" TargetType="TextBox">
    <Setter Property="Margin" Value="0,1,10,1"/>
    <Setter Property="VerticalAlignment" Value="Stretch"/>
    <Setter Property="FontFamily" Value="Segoe WP"/>
    <Setter Property="Height" Value="30" />
    <Setter Property="MinWidth" Value="200" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template" Value="{StaticResource TextBoxTemplate}" />
    <Setter Property="BorderBrush" Value="White" />
  </Style>

  <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
    <!--<Setter Property="Margin" Value="0"/>
    <Setter Property="VerticalAlignment" Value="Stretch"/>
    <Setter Property="Height" Value="Auto" />
    <Setter Property="MinWidth" Value="10" />-->
  </Style>

  <Style x:Key="DecoratorRectangle" TargetType="Rectangle">
    <Setter Property="Margin" Value="5,0,0,5" />
    <Setter Property="Width" Value="12" />
    <Setter Property="Height" Value="12" />
    <Setter Property="Fill" Value="{StaticResource DarkColorBrush}" />
    <Setter Property="StrokeThickness" Value="0" />
    <Setter Property="VerticalAlignment" Value="Bottom"/>
  </Style>

</ResourceDictionary>
