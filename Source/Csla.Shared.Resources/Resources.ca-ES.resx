<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ClearInvalidException" xml:space="preserve">
    <value>Clear és una operació invàlida</value>
  </data>
  <data name="InsertInvalidException" xml:space="preserve">
    <value>Inserir (insert) és una operació invàlida</value>
  </data>
  <data name="RemoveInvalidException" xml:space="preserve">
    <value>Remove és una operació invàlida</value>
  </data>
  <data name="ChangeInvalidException" xml:space="preserve">
    <value>Canviar un element és una operació invàlida</value>
  </data>
  <data name="ChildDeleteException" xml:space="preserve">
    <value>No es pot marcar directament un objecte fill per a esborrar-lo - utilitzeu la col·lecció pare</value>
  </data>
  <data name="NoDeleteRootException" xml:space="preserve">
    <value>Invàlid per a objectes arrel - utilitzeu Delete en el seu lloc</value>
  </data>
  <data name="NoSaveChildException" xml:space="preserve">
    <value>No es por guardar un objecte fill directament</value>
  </data>
  <data name="NoSaveEditingException" xml:space="preserve">
    <value>L'objecte està en ús i no pot ser desat</value>
  </data>
  <data name="NoSaveInvalidException" xml:space="preserve">
    <value>L'objecte no és vàlid i no pot ser desat</value>
  </data>
  <data name="CreateNotSupportedException" xml:space="preserve">
    <value>Operació invàlida - no està permès crear (create)</value>
  </data>
  <data name="FetchNotSupportedException" xml:space="preserve">
    <value>Operació invàlida - lectura (fetch) no permesa</value>
  </data>
  <data name="UpdateNotSupportedException" xml:space="preserve">
    <value>Operació invàlida - no està permès actualitzar (update)</value>
  </data>
  <data name="DeleteNotSupportedException" xml:space="preserve">
    <value>Operació invàlida - no està permès esborrar (delete)</value>
  </data>
  <data name="NoBeginEditChildException" xml:space="preserve">
    <value>BeginEdit no és vàlid en un objecte fill</value>
  </data>
  <data name="NoCancelEditChildException" xml:space="preserve">
    <value>CancelEdit no és vàlid en un objecte fill</value>
  </data>
  <data name="NoApplyEditChildException" xml:space="preserve">
    <value>ApplyEdit no és vàlid en un objecte fill</value>
  </data>
  <data name="NoSuchValueExistsException" xml:space="preserve">
    <value>No existeix el valor:</value>
  </data>
  <data name="ErrorReadingValueException" xml:space="preserve">
    <value>Error llegint el valor:</value>
  </data>
  <data name="StringToDateException" xml:space="preserve">
    <value>El valor de tipus String no pot ser convertit a una data</value>
  </data>
  <data name="ValueNotSmartDateException" xml:space="preserve">
    <value>El valor no és un SmartDate</value>
  </data>
  <data name="NoPrincipalAllowedException" xml:space="preserve">
    <value>No s'hauria de passar un objecte principal al DataPortal quan s'utilitza la seguretat integrada de Windows</value>
  </data>
  <data name="BusinessPrincipalException" xml:space="preserve">
    <value>El Principal ha de ser del tipus BusinessPrincipal, no</value>
  </data>
  <data name="SmartDateT" xml:space="preserve">
    <value>t</value>
  </data>
  <data name="SmartDateToday" xml:space="preserve">
    <value>today (avui)</value>
  </data>
  <data name="SmartDateY" xml:space="preserve">
    <value>y</value>
  </data>
  <data name="SmartDateYesterday" xml:space="preserve">
    <value>yesterday (ahir)</value>
  </data>
  <data name="SmartDateTom" xml:space="preserve">
    <value>tom</value>
  </data>
  <data name="SmartDateTomorrow" xml:space="preserve">
    <value>tomorrow (demà)</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>ha fallat</value>
  </data>
  <data name="FailedOnServer" xml:space="preserve">
    <value>ha fallat en el servidor</value>
  </data>
  <data name="MethodCallFailed" xml:space="preserve">
    <value>Ha fallat la crida al mètode</value>
  </data>
  <data name="MethodNotImplemented" xml:space="preserve">
    <value>no implementat</value>
  </data>
  <data name="ExecuteNotSupportedException" xml:space="preserve">
    <value>Operació invàlida - no està permès executar (execute)</value>
  </data>
  <data name="InsertNotSupportedException" xml:space="preserve">
    <value>Operació invàlida - no està permès inserir (insert)</value>
  </data>
  <data name="PropertyGetNotAllowed" xml:space="preserve">
    <value>No està permès recuperar el valor de la propietat (get)</value>
  </data>
  <data name="PropertySetNotAllowed" xml:space="preserve">
    <value>No està permès establir un valor a la propietat (set)</value>
  </data>
  <data name="NothingNotValid" xml:space="preserve">
    <value>L'argument no pot ser nul</value>
  </data>
  <data name="PropertyCopyFailed" xml:space="preserve">
    <value>Ha fallat la còpia de la propietat</value>
  </data>
  <data name="MaxValueRule" xml:space="preserve">
    <value>{0} no pot excedir de {1}</value>
  </data>
  <data name="MinValueRule" xml:space="preserve">
    <value>{0} no pot ser menor que {1}</value>
  </data>
  <data name="RegExMatchRule" xml:space="preserve">
    <value>{0} no coincideix amb l'expressió regular</value>
  </data>
  <data name="StringMaxLengthRule" xml:space="preserve">
    <value>{0} no pot excedir de {1} caràcters</value>
  </data>
  <data name="StringRequiredRule" xml:space="preserve">
    <value>{0} obligatori</value>
  </data>
  <data name="EditLevelMismatchException" xml:space="preserve">
    <value>Discrepància en el nivell d'edició en {0}</value>
  </data>
  <data name="MethodExecuteNotAllowed" xml:space="preserve">
    <value>Execució de mètode no permès</value>
  </data>
  <data name="NoSuchFactoryMethod" xml:space="preserve">
    <value>No existeix aquest mètode : {0}</value>
  </data>
  <data name="StringMinLengthRule" xml:space="preserve">
    <value>{0} no pot ser menor de {1} caràcters</value>
  </data>
  <data name="TypeLoadException" xml:space="preserve">
    <value>Error al carregar el tipus '{0}'</value>
  </data>
</root>