<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ClearInvalidException" xml:space="preserve">
    <value>Nettoyer (clear) est une opération invalide</value>
    <comment>Clear is an invalid operation</comment>
  </data>
  <data name="InsertInvalidException" xml:space="preserve">
    <value>Insérer (insert) est une opération invalide</value>
    <comment>Insert is an invalid operation</comment>
  </data>
  <data name="RemoveInvalidException" xml:space="preserve">
    <value>"Retirer" (Remove) est une opération invalide</value>
    <comment>Remove is an invalid operation</comment>
  </data>
  <data name="ChangeInvalidException" xml:space="preserve">
    <value>Changer un élément est une opération invalide</value>
    <comment>Changing an element is an invalid operation</comment>
  </data>
  <data name="ChildDeleteException" xml:space="preserve">
    <value>Un objet enfant ne peux être directement marqué pour effacement - Utilisez la collection qui le contient</value>
    <comment>Can not directly mark a child object for deletion - use its parent collection</comment>
  </data>
  <data name="NoSaveChildException" xml:space="preserve">
    <value>Un objet enfant ne peux être directement sauvegardé</value>
    <comment>Can not directly save a child object</comment>
  </data>
  <data name="NoSaveEditingException" xml:space="preserve">
    <value>Impossible de sauvegarder l'objet car il est en cours d'édition</value>
    <comment>Object is still being edited and can not be saved</comment>
  </data>
  <data name="NoSaveInvalidException" xml:space="preserve">
    <value>Impossible de sauvegarder l'objet car il possède des erreurs</value>
    <comment>Object is not valid and can not be saved</comment>
  </data>
  <data name="CreateNotSupportedException" xml:space="preserve">
    <value>Opération invalide - Créer (create) n'est pas permis</value>
    <comment>Invalid operation - create not allowed</comment>
  </data>
  <data name="FetchNotSupportedException" xml:space="preserve">
    <value>Opération invalide - Charger (fetch) n'est pas permis</value>
    <comment>Invalid operation - fetch not allowed</comment>
  </data>
  <data name="UpdateNotSupportedException" xml:space="preserve">
    <value>Operation invalide - mise à jour (update) n'est pas permis</value>
    <comment>Invalid operation - update not allowed</comment>
  </data>
  <data name="DeleteNotSupportedException" xml:space="preserve">
    <value>Opération invalide - Effacer (delete) n'est pas permis</value>
    <comment>Invalid operation - delete not allowed</comment>
  </data>
  <data name="NoBeginEditChildException" xml:space="preserve">
    <value>Opération invalide - "BeginEdit" n'est pas permis sur un objet enfant</value>
    <comment>BeginEdit is not valid on a child object</comment>
  </data>
  <data name="NoCancelEditChildException" xml:space="preserve">
    <value>Opération invalide - "CancelEdit" n'est pas permis sur un objet enfant</value>
    <comment>CancelEdit is not valid on a child object</comment>
  </data>
  <data name="NoApplyEditChildException" xml:space="preserve">
    <value>Opération invalide - "ApplyEdit" n'est pas permis sur un objet enfant</value>
    <comment>ApplyEdit is not valid on a child object</comment>
  </data>
  <data name="NoSuchValueExistsException" xml:space="preserve">
    <value>Cette valeur n'existe pas:</value>
    <comment>No such value exists:</comment>
  </data>
  <data name="ErrorReadingValueException" xml:space="preserve">
    <value>Erreur lors de la lecture de cette valeur:</value>
    <comment>Error reading value:</comment>
  </data>
  <data name="StringToDateException" xml:space="preserve">
    <value>Cette chaine de caractère ne peux être convertis en type "Date"</value>
    <comment>String value can not be converted to a date</comment>
  </data>
  <data name="ValueNotSmartDateException" xml:space="preserve">
    <value>La valeur (Value) n'est pas du type "SmartDate"</value>
    <comment>Value is not a SmartDate</comment>
  </data>
  <data name="NoPrincipalAllowedException" xml:space="preserve">
    <value>Un objet "Principal" ne doit être passé au "DataPortal" lorsque la sécurité intégrée à Windows est utilisée</value>
    <comment>No principal object should be passed to DataPortal when using Windows integrated security</comment>
  </data>
  <data name="BusinessPrincipalException" xml:space="preserve">
    <value>Le "Principal" doit être du type "BusinessPrincipal" et non du type</value>
    <comment>Principal must be of type BusinessPrincipal, not</comment>
  </data>
  <data name="SmartDateT" xml:space="preserve">
    <value>a</value>
    <comment>t</comment>
  </data>
  <data name="SmartDateToday" xml:space="preserve">
    <value>aujourd'hui</value>
    <comment>today</comment>
  </data>
  <data name="SmartDateY" xml:space="preserve">
    <value>h</value>
    <comment>y</comment>
  </data>
  <data name="SmartDateYesterday" xml:space="preserve">
    <value>hier</value>
    <comment>yesterday</comment>
  </data>
  <data name="SmartDateTom" xml:space="preserve">
    <value>d</value>
    <comment>tom</comment>
  </data>
  <data name="SmartDateTomorrow" xml:space="preserve">
    <value>demain</value>
    <comment>tomorrow</comment>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>a échoué</value>
    <comment>failed</comment>
  </data>
  <data name="FailedOnServer" xml:space="preserve">
    <value>a échoué sur le serveur</value>
    <comment>failed on the server</comment>
  </data>
  <data name="MethodCallFailed" xml:space="preserve">
    <value>L'appel à la méthode a échoué</value>
    <comment>method call failed</comment>
  </data>
  <data name="MethodNotImplemented" xml:space="preserve">
    <value>non implanté</value>
    <comment>not implemented</comment>
  </data>
  <data name="ExecuteNotSupportedException" xml:space="preserve">
    <value>Opération invalide - Exécuter (execute) n'est pas permis</value>
    <comment>Invalid operation - execute not allowed</comment>
  </data>
  <data name="InsertNotSupportedException" xml:space="preserve">
    <value>Opération invalide - Insérer (insert) n'est pas permis</value>
    <comment>Invalid operation - insert not allowed</comment>
  </data>
  <data name="PropertyGetNotAllowed" xml:space="preserve">
    <value>Le "get" n'est pas permis pour cette propriété</value>
    <comment>Property get not allowed</comment>
  </data>
  <data name="PropertySetNotAllowed" xml:space="preserve">
    <value>Le "set" n'est pas permis pour cette propriété</value>
    <comment>Property set not allowed</comment>
  </data>
  <data name="NoDeleteRootException" xml:space="preserve">
    <value>Invalide pour les objets racine - Utilisez plutôt "Effacer" (Delete)</value>
    <comment>Invalid for root objects - use Delete instead</comment>
  </data>
  <data name="NothingNotValid" xml:space="preserve">
    <value>Cet argument ne peut être nul (Nothing)</value>
    <comment>Argument must not be Nothing</comment>
  </data>
  <data name="PropertyCopyFailed" xml:space="preserve">
    <value>La copie (copy) de cette propriété a échoué</value>
    <comment>Property copy failed</comment>
  </data>
  <data name="MaxValueRule" xml:space="preserve">
    <value>la valeur de {0} ne peut pas être supérieure à {1}</value>
    <comment>{0} can not exceed {1}</comment>
  </data>
  <data name="MinValueRule" xml:space="preserve">
    <value>la valeur de {0} ne peut pas être inférieure à {1}</value>
    <comment>{0} can not be less than {1}</comment>
  </data>
  <data name="StringMaxLengthRule" xml:space="preserve">
    <value>la longueur de {0} ne peut pas dépasser {1} caractères</value>
    <comment>{0} can not exceed {1} characters</comment>
  </data>
  <data name="StringRequiredRule" xml:space="preserve">
    <value>{0} obligatoire</value>
    <comment>{0} required</comment>
  </data>
  <data name="RegExMatchRule" xml:space="preserve">
    <value>{0} ne vérifie pas l'expression régulière</value>
    <comment>{0} does not match regular expression</comment>
  </data>
  <data name="TypeLoadException" xml:space="preserve">
    <value>Echec lors du chargement du type '{0}'</value>
    <comment>Failed to load type '{0}'</comment>
  </data>
  <data name="StringMinLengthRule" xml:space="preserve">
    <value>{0} doit au moins avoir {1} caractères</value>
    <comment>{0} can not be less than {1} characters</comment>
  </data>
  <data name="MethodExecuteNotAllowed" xml:space="preserve">
    <value>L'éxécution de cette méthode n'est pas autorisée</value>
    <comment>Method execution not allowed</comment>
  </data>
  <data name="NoSuchFactoryMethod" xml:space="preserve">
    <value>le factory méthode:{0} n'existe pas</value>
    <comment>No such factory method:{0}</comment>
  </data>
  <data name="AsyncMethodOnSyncClientNotAllowed" xml:space="preserve">
    <value>Impossible d'appeler de manière synchrone {0}, qui est une méthode asynchrone</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Attention</value>
  </data>
  <data name="ActionExtenderErrorCaption" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="NoSuchMethod" xml:space="preserve">
    <value>La méthode {0} n'existe pas</value>
  </data>
  <data name="ObjectNotSerializableFormatted" xml:space="preserve">
    <value>Objet non sérialisable ({0})</value>
  </data>
</root>