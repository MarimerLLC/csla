<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ClearInvalidException" xml:space="preserve">
    <value>Clear este o operatie invalida</value>
    <comment>Clear is an invalid operation</comment>
  </data>
  <data name="InsertInvalidException" xml:space="preserve">
    <value>Insert este o operatie invalida</value>
    <comment>Insert is an invalid operation</comment>
  </data>
  <data name="RemoveInvalidException" xml:space="preserve">
    <value>Remove nu e o peratie valida</value>
    <comment>Remove is an invalid operation</comment>
  </data>
  <data name="ChangeInvalidException" xml:space="preserve">
    <value>Schimbarea unui element este o operatie invalida</value>
    <comment>Changing an element is an invalid operation</comment>
  </data>
  <data name="ChildDeleteException" xml:space="preserve">
    <value>Nu se poate marca direct un copil pentru stergere - utilizati colectia sa parinte</value>
    <comment>Can not directly mark a child object for deletion - use its parent collection</comment>
  </data>
  <data name="NoDeleteRootException" xml:space="preserve">
    <value>Invalid pentru obiecte root - utilizati Delete</value>
    <comment>Invalid for root objects - use Delete instead</comment>
  </data>
  <data name="NoSaveChildException" xml:space="preserve">
    <value>Nu se poate salva direct un obiect copil</value>
    <comment>Can not directly save a child object</comment>
  </data>
  <data name="NoSaveEditingException" xml:space="preserve">
    <value>Obiectul se editeaza inca si nu poate fi salvat</value>
    <comment>Object is still being edited and can not be saved</comment>
  </data>
  <data name="NoSaveInvalidException" xml:space="preserve">
    <value>Obiectul nu e valid si nu poate fi salvat</value>
    <comment>Object is not valid and can not be saved</comment>
  </data>
  <data name="CreateNotSupportedException" xml:space="preserve">
    <value>Crearea nu e operatie permisa</value>
    <comment>Invalid operation - create not allowed</comment>
  </data>
  <data name="FetchNotSupportedException" xml:space="preserve">
    <value>Operatie invalida - umplerea nu e permisa</value>
    <comment>Invalid operation - fetch not allowed</comment>
  </data>
  <data name="UpdateNotSupportedException" xml:space="preserve">
    <value>operatie invalida  - update nu e permis</value>
    <comment>Invalid operation - update not allowed</comment>
  </data>
  <data name="DeleteNotSupportedException" xml:space="preserve">
    <value>Stergerea nu e o operatie permisa</value>
    <comment>Invalid operation - delete not allowed</comment>
  </data>
  <data name="NoBeginEditChildException" xml:space="preserve">
    <value>BeginEdit nu e valid pe un obiect copil</value>
    <comment>BeginEdit is not valid on a child object</comment>
  </data>
  <data name="NoCancelEditChildException" xml:space="preserve">
    <value>CancelEdit nu e valid pe un obiect copil</value>
    <comment>CancelEdit is not valid on a child object</comment>
  </data>
  <data name="NoApplyEditChildException" xml:space="preserve">
    <value>ApplyEdit nu e valid pe un obiect copil</value>
    <comment>ApplyEdit is not valid on a child object</comment>
  </data>
  <data name="NoSuchValueExistsException" xml:space="preserve">
    <value>Nu exista valoarea :</value>
    <comment>No such value exists:</comment>
  </data>
  <data name="ErrorReadingValueException" xml:space="preserve">
    <value>Eroare la citirea </value>
    <comment>Error reading value:</comment>
  </data>
  <data name="StringToDateException" xml:space="preserve">
    <value>valoarea stringului nu poate fi convertita la data</value>
    <comment>String value can not be converted to a date</comment>
  </data>
  <data name="ValueNotSmartDateException" xml:space="preserve">
    <value>Valoare nu e de tipul SmartDate</value>
    <comment>Value is not a SmartDate</comment>
  </data>
  <data name="NoPrincipalAllowedException" xml:space="preserve">
    <value>Nu trebuie trecut un obiect Principal la DataProtal cind utilizati Windows Integrated security</value>
    <comment>No principal object should be passed to DataPortal when using Windows integrated security</comment>
  </data>
  <data name="BusinessPrincipalException" xml:space="preserve">
    <value>principal trebuie sa fie de tipul BussinesPrincipal, nu </value>
    <comment>Principal must be of type BusinessPrincipal, not</comment>
  </data>
  <data name="SmartDateT" xml:space="preserve">
    <value>a</value>
    <comment>t</comment>
  </data>
  <data name="SmartDateToday" xml:space="preserve">
    <value>azi</value>
    <comment>today</comment>
  </data>
  <data name="SmartDateY" xml:space="preserve">
    <value>i</value>
    <comment>y</comment>
  </data>
  <data name="SmartDateYesterday" xml:space="preserve">
    <value>ieri</value>
    <comment>yesterday</comment>
  </data>
  <data name="SmartDateTom" xml:space="preserve">
    <value>miine</value>
    <comment>tom</comment>
  </data>
  <data name="SmartDateTomorrow" xml:space="preserve">
    <value>miine</value>
    <comment>tomorrow</comment>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>Eroare</value>
    <comment>failed</comment>
  </data>
  <data name="FailedOnServer" xml:space="preserve">
    <value>Eroare la server</value>
    <comment>failed on the server</comment>
  </data>
  <data name="MethodCallFailed" xml:space="preserve">
    <value>Chemarea metodei a produs eroare</value>
    <comment>method call failed</comment>
  </data>
  <data name="MethodNotImplemented" xml:space="preserve">
    <value>Methoda nu e implementata</value>
    <comment>not implemented</comment>
  </data>
  <data name="ExecuteNotSupportedException" xml:space="preserve">
    <value>Operatie invalida - executia nu e permisa</value>
    <comment>Invalid operation - execute not allowed</comment>
  </data>
  <data name="InsertNotSupportedException" xml:space="preserve">
    <value>Operatie invalida - insert nu e permis</value>
    <comment>Invalid operation - insert not allowed</comment>
  </data>
  <data name="PropertyGetNotAllowed" xml:space="preserve">
    <value>Proprietatea nu admite get</value>
    <comment>Property get not allowed</comment>
  </data>
  <data name="PropertySetNotAllowed" xml:space="preserve">
    <value>Proprietatea nu admite set</value>
    <comment>Property set not allowed</comment>
  </data>
  <data name="NothingNotValid" xml:space="preserve">
    <value>Argumetul trebuie sa nu fie Nothing</value>
    <comment>Argument must not be Nothing</comment>
  </data>
  <data name="PropertyCopyFailed" xml:space="preserve">
    <value>Copierea proprietatii a dat eroare</value>
    <comment>Property copy failed</comment>
  </data>
</root>