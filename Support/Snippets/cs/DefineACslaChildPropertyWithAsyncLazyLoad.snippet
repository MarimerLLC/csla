<?xml version="1.0"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Define a Csla Child Property with async lazy load</Title>
      <Author>Rockford Lhotka</Author>
      <Description>Define a Csla Child property with async lazy load</Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>cslachildla</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>PropertyName</ID>
          <ToolTip>Replace with property name.</ToolTip>
          <Default>Name</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>ChildType</ID>
          <ToolTip>Replace with the property type.</ToolTip>
          <Default>ChildTypeName</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Kind="method decl"><![CDATA[public static readonly PropertyInfo<$ChildType$> $PropertyName$Property = RegisterProperty<$ChildType$>(c => c.$PropertyName$, RelationshipTypes.Child | RelationshipTypes.LazyLoad);
public $ChildType$ $PropertyName$
{
  get 
  { 
    if (!FieldManager.FieldExists($PropertyName$Property)) 
    { 
        $ChildType$.BeginGet$ChildType$((o,e) => 
          {
            if (e.Error != null) 
              throw e.Error;
            if (!FieldManager.FieldExists($PropertyName$Property))
            {
               $PropertyName$ = e.Object;
            }
          }); 
          return null;
    } 
    return GetProperty($PropertyName$Property); 
  } 
  private set 
  {  
    LoadProperty($PropertyName$Property, value); 
    OnPropertyChanged($PropertyName$Property); 
  } 
}$end$]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>